[
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.1",
      "question_text": "Consider the following two statements about the function f(x) = |x|:\nP. f(x) is continuous for all real values of x\nQ. f(x) is differentiable for all real values of x\nWhich of the following is TRUE?",
      "options": [
        "(A) P is true and Q is false.",
        "(B) P is false and Q is true.",
        "(C) Both P and Q are true.",
        "(D) Both P and Q are false."
      ],
      "subject": "Engineering Mathematics",
      "chapter": "Calculus",
      "subtopic": "Limits, continuity and differentiability",
      "theoretical_practical": "theoretical",
      "marks": 1,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.2",
      "question_text": "Let S be a set of n elements. The number of ordered pairs in the largest and the smallest equivalence relations on S are",
      "options": [
        "(A) n and n",
        "(B) n² and n",
        "(C) n² and 0",
        "(D) n and 1"
      ],
      "subject": "Engineering Mathematics",
      "chapter": "Discrete Mathematics",
      "subtopic": "Sets, relations, functions, partial orders and lattices",
      "theoretical_practical": "theoretical",
      "marks": 1,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.3",
      "question_text": "What is the maximum number of different Boolean functions involving n Boolean variables?",
      "options": [
        "(A) n²",
        "(B) 2ⁿ",
        "(C) 2²ⁿ",
        "(D) 2ⁿ²"
      ],
      "subject": "Digital Logic",
      "chapter": "Boolean Algebra and Minimization",
      "subtopic": "Boolean algebra",
      "theoretical_practical": "theoretical",
      "marks": 1,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.4",
      "question_text": "Let G be the non-planar graph with the minimum possible number of edges. Then G has",
      "options": [
        "(A) 9 edges and 5 vertices",
        "(B) 9 edges and 6 vertices",
        "(C) 10 edges and 5 vertices",
        "(D) 10 edges and 6 vertices"
      ],
      "subject": "Engineering Mathematics",
      "chapter": "Discrete Mathematics",
      "subtopic": "Graphs: connectivity, matching, colouring",
      "theoretical_practical": "theoretical",
      "marks": 1,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.5",
      "question_text": "Consider the DAG with V = {1,2,3,4,5,6}, shown below.\nWhich of the following is NOT a topological ordering?",
      "options": [
        "(A) 1 2 3 4 5 6",
        "(B) 1 3 2 4 5 6",
        "(C) 1 3 2 4 6 5",
        "(D) 3 2 4 1 6 5"
      ],
      "subject": "Algorithms",
      "chapter": "Graph Algorithms",
      "subtopic": "Graph traversals",
      "theoretical_practical": "practical",
      "marks": 1,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.6",
      "question_text": "Which of the following problems is undecidable?",
      "options": [
        "(A) Membership problem for CFGs.",
        "(B) Ambiguity problem for CFGs.",
        "(C) Finiteness problem for FSAs.",
        "(D) Equivalence problem for FSAs."
      ],
      "subject": "Theory of Computation",
      "chapter": "Turing Machines and Undecidability",
      "subtopic": "Turing machines and undecidability",
      "theoretical_practical": "theoretical",
      "marks": 1,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.7",
      "question_text": "Which of the following is TRUE?",
      "options": [
        "(A) Every subset of a regular set is regular.",
        "(B) Every finite subset of a non-regular set is regular.",
        "(C) The union of two non-regular sets is not regular.",
        "(D) Infinite union of finite sets is regular."
      ],
      "subject": "Theory of Computation",
      "chapter": "Regular Languages and Finite Automata",
      "subtopic": "Regular and context-free languages",
      "theoretical_practical": "theoretical",
      "marks": 1,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.8",
      "question_text": "How many 3-to-8 line decoders with an enable input are needed to construct a 6-to-64 line decoder without using any other logic gates?",
      "options": [
        "(A) 7",
        "(B) 8",
        "(C) 9",
        "(D) 10"
      ],
      "subject": "Digital Logic",
      "chapter": "Combinational and Sequential Circuits",
      "subtopic": "Combinational and sequential circuits",
      "theoretical_practical": "practical",
      "marks": 1,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.9",
      "question_text": "Consider the following Boolean function of four variables:\nf(w, x, y, z) = ∑(1,3,4,6,9,11,12,14)\nThe function is",
      "options": [
        "(A) independent of one variable.",
        "(B) independent of two variables.",
        "(C) independent of three variables.",
        "(D) dependent on all the variables."
      ],
      "subject": "Digital Logic",
      "chapter": "Boolean Algebra and Minimization",
      "subtopic": "Minimization",
      "theoretical_practical": "practical",
      "marks": 1,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.10",
      "question_text": "Consider a 4-way set associative cache consisting of 128 lines with a line size of 64 words. The CPU generates a 20-bit address of a word in main memory. The number of bits in the TAG, LINE and WORD fields are respectively:",
      "options": [
        "(A) 9, 6, 5",
        "(B) 7, 7, 6",
        "(C) 7, 5, 8",
        "(D) 9, 5, 6"
      ],
      "subject": "Computer Organization and Architecture",
      "chapter": "Memory Hierarchy",
      "subtopic": "Memory hierarchy: cache, main memory and secondary storage",
      "theoretical_practical": "practical",
      "marks": 1,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.11",
      "question_text": "Consider a disk pack with 16 surfaces, 128 tracks per surface and 256 sectors per track. 512 bytes of data are stored in a bit serial manner in a sector. The capacity of the disk pack and the number of bits required to specify a particular sector in the disk are respectively:",
      "options": [
        "(A) 256 Mbyte, 19 bits",
        "(B) 256 Mbyte, 28 bits",
        "(C) 512 Mbyte, 20 bits",
        "(D) 64 Gbyte, 28 bits"
      ],
      "subject": "Computer Organization and Architecture",
      "chapter": "Memory Hierarchy",
      "subtopic": "Memory hierarchy: cache, main memory and secondary storage",
      "theoretical_practical": "practical",
      "marks": 1,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.12",
      "question_text": "The height of a binary tree is the maximum number of edges in any root to leaf path. The maximum number of nodes in a binary tree of height h is:",
      "options": [
        "(A) 2ʰ - 1",
        "(B) 2ʰ⁻¹ - 1",
        "(C) 2ʰ⁺¹ - 1",
        "(D) 2ʰ⁺¹"
      ],
      "subject": "Programming and Data Structures",
      "chapter": "Data Structures",
      "subtopic": "trees, binary search trees, binary heaps, graphs",
      "theoretical_practical": "theoretical",
      "marks": 1,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.13",
      "question_text": "The maximum number of binary trees that can be formed with three unlabeled nodes is:",
      "options": [
        "(A) 1",
        "(B) 5",
        "(C) 4",
        "(D) 3"
      ],
      "subject": "Engineering Mathematics",
      "chapter": "Discrete Mathematics",
      "subtopic": "Combinatorics: counting, recurrence relations, generating functions",
      "theoretical_practical": "practical",
      "marks": 1,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.14",
      "question_text": "Which of the following sorting algorithms has the lowest worst-case complexity?",
      "options": [
        "(A) Merge sort",
        "(B) Bubble sort",
        "(C) Quick sort",
        "(D) Selection sort"
      ],
      "subject": "Algorithms",
      "chapter": "Analysis of Algorithms",
      "subtopic": "Asymptotic worst case time and space complexity",
      "theoretical_practical": "theoretical",
      "marks": 1,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.15",
      "question_text": "Consider the following segment of C-code:\nint j, n;\nj = 1;\nwhile (j <= n)\n  j = j*2;\nThe number of comparisons made in the execution of the loop for any n > 0 is:",
      "options": [
        "(A) ⌈log₂ n⌉ + 1",
        "(B) n",
        "(C) ⌈log₂ n⌉",
        "(D) ⌊log₂ n⌋ + 1"
      ],
      "subject": "Algorithms",
      "chapter": "Analysis of Algorithms",
      "subtopic": "Asymptotic worst case time and space complexity",
      "theoretical_practical": "practical",
      "marks": 1,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.16",
      "question_text": "Group 1 contains some CPU scheduling algorithms and Group 2 contains some applications. Match entries in Group 1 to entries in Group 2.\nGroup 1\nP. Gang Scheduling\nQ. Rate Monotonic Scheduling\nR. Fair Share Scheduling\nGroup 2\n1. Guaranteed Scheduling\n2. Real-time Scheduling\n3. Thread Scheduling",
      "options": [
        "(A) P-3; Q-2; R-1",
        "(B) P-1; Q-2; R-3",
        "(C) P-2; Q-3; R-1",
        "(D) P-1; Q-3; R-2"
      ],
      "subject": "Operating System",
      "chapter": "CPU Scheduling",
      "subtopic": "CPU and I/O scheduling",
      "theoretical_practical": "theoretical",
      "marks": 1,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.17",
      "question_text": "Consider the following statements about user level threads and kernel level threads. Which one of the following statements is FALSE?",
      "options": [
        "(A) Context switch time is longer for kernel level threads than for user level threads.",
        "(B) User level threads do not need any hardware support.",
        "(C) Related kernel level threads can be scheduled on different processors in a multi-processor system.",
        "(D) Blocking one kernel level thread blocks all related threads."
      ],
      "subject": "Operating System",
      "chapter": "Processes and Threads",
      "subtopic": "System calls, processes, threads, inter-process communication",
      "theoretical_practical": "theoretical",
      "marks": 1,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.18",
      "question_text": "Which one of the following is a top-down parser?",
      "options": [
        "(A) Recursive descent parser.",
        "(B) Operator precedence parser.",
        "(C) An LR(k) parser.",
        "(D) An LALR(k) parser."
      ],
      "subject": "Compiler Design",
      "chapter": "Lexical Analysis and Parsing",
      "subtopic": "parsing",
      "theoretical_practical": "theoretical",
      "marks": 1,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.19",
      "question_text": "In Ethernet when Manchester encoding is used, the bit rate is:",
      "options": [
        "(A) Half the baud rate.",
        "(B) Twice the baud rate.",
        "(C) Same as the baud rate.",
        "(D) None of the above."
      ],
      "subject": "Computer Networks",
      "chapter": "Data Link Layer",
      "subtopic": "Data link layer: framing, error detection, Medium Access Control, Ethernet bridging",
      "theoretical_practical": "theoretical",
      "marks": 1,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 0.9
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.20",
      "question_text": "Which one of the following uses UDP as the transport protocol?",
      "options": [
        "(A) HTTP",
        "(B) Telnet",
        "(C) DNS",
        "(D) SMTP"
      ],
      "subject": "Computer Networks",
      "chapter": "Application Layer",
      "subtopic": "Application layer protocols: DNS, SMTP, HTTP, FTP, Email",
      "theoretical_practical": "theoretical",
      "marks": 1,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.21",
      "question_text": "How many different non-isomorphic Abelian groups of order 4 are there?",
      "options": [
        "(A) 2",
        "(B) 3",
        "(C) 4",
        "(D) 5"
      ],
      "subject": "Engineering Mathematics",
      "chapter": "Discrete Mathematics",
      "subtopic": "Monoids, Groups",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.22",
      "question_text": "Let Graph(x) be a predicate which denotes that x is a graph. Let Connected(x) be a predicate which denotes that x is connected. Which of the following first order logic sentences DOES NOT represent the statement: “Not every graph is connected”?",
      "options": [
        "(A) ¬∀x (Graph(x) ⇒ Connected(x))",
        "(B) ∃x (Graph(x) ∧ ¬Connected(x))",
        "(C) ¬∀x (¬Graph(x) ∨ Connected(x))",
        "(D) ∀x (Graph(x) ⇒ ¬Connected(x))"
      ],
      "subject": "Engineering Mathematics",
      "chapter": "Discrete Mathematics",
      "subtopic": "Propositional and first order logic",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.23",
      "question_text": "Which of the following graphs has an Eulerian circuit?",
      "options": [
        "(A) Any k-regular graph where k is an even number.",
        "(B) A complete graph on 90 vertices.",
        "(C) The complement of a cycle on 25 vertices.",
        "(D) None of the above."
      ],
      "subject": "Engineering Mathematics",
      "chapter": "Discrete Mathematics",
      "subtopic": "Graphs: connectivity, matching, colouring",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.24",
      "question_text": "Suppose we uniformly and randomly select a permutation from the 20! permutations of 1,2,3,...,20. What is the probability that 2 appears at an earlier position than any other even number in the selected permutation?",
      "options": [
        "(A) 1/2",
        "(B) 1/10",
        "(C) 9!/20!",
        "(D) None of the above."
      ],
      "subject": "Engineering Mathematics",
      "chapter": "Probability and Statistics",
      "subtopic": "Conditional probability and Bayes theorem",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 0.8
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.25",
      "question_text": "Let A be a 4x4 matrix with eigenvalues –5,–2,1,4. Which of the following is an eigenvalue of [A I; I A], where I is the 4x4 identity matrix?",
      "options": [
        "(A) -5",
        "(B) -7",
        "(C) 2",
        "(D) 1"
      ],
      "subject": "Engineering Mathematics",
      "chapter": "Linear Algebra",
      "subtopic": "eigenvalues and eigenvectors",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.26",
      "question_text": "Consider the set S = {a,b,c,d}. Consider the following 4 partitions π₁, π₂, π₃, π₄ on S: π₁ = {abcd}, π₂ = {ab, cd}, π₃ = {abc, d}, π₄ = {a,b,c,d}. Let ≺ be the partial order on the set of partitions S' = {π₁, π₂, π₃, π₄} defined as follows: πᵢ ≺ πⱼ if and only if πᵢ refines πⱼ. The poset diagram for (S',≺) is",
      "options": [
        "(A)",
        "(B)",
        "(C)",
        "(D)"
      ],
      "subject": "Engineering Mathematics",
      "chapter": "Discrete Mathematics",
      "subtopic": "Sets, relations, functions, partial orders and lattices",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.27",
      "question_text": "Consider the set of (column) vectors defined by X = {x ∈ R³ | x₁ + x₂ + x₃ = 0, where xᵀ = [x₁,x₂,x₃]ᵀ}. Which of the following is TRUE?",
      "options": [
        "(A) { [1,–1,0]ᵀ, [1,0,–1]ᵀ } is a basis for the subspace X.",
        "(B) { [1,–1,0]ᵀ, [1,0,–1]ᵀ } is a linearly independent set, but it does not span X and therefore is not a basis of X.",
        "(C) X is not a subspace of R³.",
        "(D) None of the above."
      ],
      "subject": "Engineering Mathematics",
      "chapter": "Linear Algebra",
      "subtopic": "system of linear equations",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 0.9
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.28",
      "question_text": "Consider the series xₙ₊₁ = xₙ/2 + 9/(8xₙ), x₀ = 0.5 obtained from the Newton-Raphson method. The series converges to",
      "options": [
        "(A) 1.5",
        "(B) √2",
        "(C) 1.6",
        "(D) 1.4"
      ],
      "subject": "Engineering Mathematics",
      "chapter": "Calculus",
      "subtopic": "OTHER: Newton-Raphson method",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 0.4
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.29",
      "question_text": "A minimum state deterministic finite automaton accepting the language L = {w | w ∈ {0,1}*, number of 0s and 1s in w are divisible by 3 and 5, respectively} has",
      "options": [
        "(A) 15 states",
        "(B) 11 states",
        "(C) 10 states",
        "(D) 9 states"
      ],
      "subject": "Theory of Computation",
      "chapter": "Regular Languages and Finite Automata",
      "subtopic": "Regular expressions and finite automata",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.30",
      "question_text": "The language L = {0ⁱ21ⁱ | i≥0} over the alphabet {0, 1, 2} is",
      "options": [
        "(A) not recursive.",
        "(B) is recursive and is a deterministic CFL.",
        "(C) is a regular language.",
        "(D) is not a deterministic CFL but a CFL."
      ],
      "subject": "Theory of Computation",
      "chapter": "Context-Free Languages and Pushdown Automata",
      "subtopic": "Context-free grammars and push-down automata",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.31",
      "question_text": "Which of the following languages is regular?",
      "options": [
        "(A) {wwᴿ | w ∈ {0,1}⁺}",
        "(B) {wwᴿx | x, w ∈ {0,1}⁺}",
        "(C) {wxwᴿ | x, w ∈ {0,1}⁺}",
        "(D) {xwwᴿ | x, w ∈ {0,1}⁺}"
      ],
      "subject": "Theory of Computation",
      "chapter": "Regular Languages and Finite Automata",
      "subtopic": "Regular and context-free languages",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.32",
      "question_text": "Let f(w,x,y,z) = ∑(0,4,5,7,8,9,13,15). Which of the following expressions are NOT equivalent to f?\n(P) x'y'z'+w'xy'+wy'z + xz\n(Q) w'y'z'+wx'y'+xz\n(R) w'y'z'+wx'y'+xyz + xy'z\n(S) x'y'z'+wx'y'+w'y",
      "options": [
        "(A) P only",
        "(B) Q and S",
        "(C) R and S",
        "(D) S only"
      ],
      "subject": "Digital Logic",
      "chapter": "Boolean Algebra and Minimization",
      "subtopic": "Minimization",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.33",
      "question_text": "Define the connective * for the Boolean variables X and Y as: X * Y = XY + X'Y'. Let Z = X * Y. Consider the following expressions P, Q and R.\nP: X = Y * Z\tQ: Y = X * Z\tR: X * Y * Z = 1\nWhich of the following is TRUE?",
      "options": [
        "(A) Only P and Q are valid.",
        "(B) Only Q and R are valid.",
        "(C) Only P and R are valid.",
        "(D) All P, Q, R are valid."
      ],
      "subject": "Digital Logic",
      "chapter": "Boolean Algebra and Minimization",
      "subtopic": "Boolean algebra",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.34",
      "question_text": "Suppose only one multiplexer and one inverter are allowed to be used to implement any Boolean function of n variables. What is the minimum size of the multiplexer needed?",
      "options": [
        "(A) 2ⁿ line to 1 line",
        "(B) 2ⁿ⁺¹ line to 1 line",
        "(C) 2ⁿ⁻¹ line to 1 line",
        "(D) 2ⁿ⁻² line to 1 line"
      ],
      "subject": "Digital Logic",
      "chapter": "Combinational and Sequential Circuits",
      "subtopic": "Combinational and sequential circuits",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.35",
      "question_text": "In a look-ahead carry generator, the carry generate function Gᵢ and the carry propagate function Pᵢ for inputs Aᵢ and Bᵢ are given by:\nPᵢ = Aᵢ ⊕ Bᵢ and Gᵢ = AᵢBᵢ\nThe expressions for the sum bit Sᵢ and the carry bit Cᵢ₊₁ of the look-ahead carry adder are given by:\nSᵢ = Pᵢ ⊕ Cᵢ and Cᵢ₊₁ = Gᵢ + PᵢCᵢ, where C₀ is the input carry.\nConsider a two-level logic implementation of the look-ahead carry generator. Assume that all Pᵢ and Gᵢ are available for the carry generator circuit and that the AND and OR gates can have any number of inputs. The number of AND gates and OR gates needed to implement the look-ahead carry generator for a 4-bit adder with S₃, S₂, S₁, S₀ and C₄ as its outputs are respectively:",
      "options": [
        "(A) 6, 3",
        "(B) 10, 4",
        "(C) 6, 4",
        "(D) 10, 5"
      ],
      "subject": "Digital Logic",
      "chapter": "Combinational and Sequential Circuits",
      "subtopic": "Combinational and sequential circuits",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.36",
      "question_text": "The control signal functions of a 4-bit binary counter are given below (where X is “don’t care”):\n... [table omitted] ...\nThe counter is connected as follows:\n... [diagram omitted] ...\nAssume that the counter and gate delays are negligible. If the counter starts at 0, then it cycles through the following sequence:",
      "options": [
        "(A) 0, 3, 4",
        "(B) 0, 3, 4, 5",
        "(C) 0, 1, 2, 3, 4",
        "(D) 0, 1, 2, 3, 4, 5"
      ],
      "subject": "Digital Logic",
      "chapter": "Combinational and Sequential Circuits",
      "subtopic": "Combinational and sequential circuits",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.37",
      "question_text": "Consider a pipelined processor with the following four stages:\nIF: Instruction Fetch\nID: Instruction Decode and Operand Fetch\nEX: Execute\nWB: Write Back\nThe IF, ID and WB stages take one clock cycle each to complete the operation. The number of clock cycles for the EX stage depends on the instruction. The ADD and SUB instructions need 1 clock cycle and the MUL instruction needs 3 clock cycles in the EX stage. Operand forwarding is used in the pipelined processor. What is the number of clock cycles taken to complete the following sequence of instructions?\nADD R2, R1, R0\tR2 ← R1 + R0\nMUL R4, R3, R2\tR4 ← R3 * R2\nSUB R6, R5, R4\tR6 ← R5 – R4",
      "options": [
        "(A) 7",
        "(B) 8",
        "(C) 10",
        "(D) 14"
      ],
      "subject": "Computer Organization and Architecture",
      "chapter": "Pipelining",
      "subtopic": "Instruction pipelining, pipeline hazards",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.38",
      "question_text": "The following postfix expression with single digit operands is evaluated using a stack:\n8 2 3 ^ / 2 3 * + 5 1 * -\nNote that ^ is the exponentiation operator. The top two elements of the stack after the first * is evaluated are:",
      "options": [
        "(A) 6, 1",
        "(B) 5, 7",
        "(C) 3, 2",
        "(D) 1, 5"
      ],
      "subject": "Programming and Data Structures",
      "chapter": "Data Structures",
      "subtopic": "Arrays, stacks, queues, linked lists, trees, binary search trees, binary heaps, graphs",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.39",
      "question_text": "The inorder and preorder traversal of a binary tree are\nd b e a f c g and a b d e c f g, respectively.\nThe postorder traversal of the binary tree is",
      "options": [
        "(A) d e b f g c a",
        "(B) e d b g f c a",
        "(C) e d b f g c a",
        "(D) d e f g b c a"
      ],
      "subject": "Programming and Data Structures",
      "chapter": "Data Structures",
      "subtopic": "trees, binary search trees, binary heaps, graphs",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.40",
      "question_text": "Consider a hash table of size seven, with starting index zero, and a hash function (3x+4)mod 7. Assuming the hash table is initially empty, which of the following is the contents of the table when the sequence 1,3,8,10 is inserted into the table using closed hashing? Note that _ denotes an empty location in the table.",
      "options": [
        "(A) 8,_,_,_,_,_,10",
        "(B) 1,8,10,_,_,_,3",
        "(C) 1,_,_,_,_,_,3",
        "(D) 1,10,8,_,_,_,3"
      ],
      "subject": "Algorithms",
      "chapter": "Searching, Sorting and Hashing",
      "subtopic": "Searching, sorting, hashing",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.41",
      "question_text": "In an unweighted, undirected connected graph, the shortest path from a node S to every other node is computed most efficiently, in terms of time complexity, by",
      "options": [
        "(A) Dijkstra’s algorithm starting from S.",
        "(B) Warshall’s algorithm.",
        "(C) performing a DFS starting from S.",
        "(D) performing a BFS starting from S."
      ],
      "subject": "Algorithms",
      "chapter": "Graph Algorithms",
      "subtopic": "shortest paths",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.42",
      "question_text": "Consider the following C function:\nint f(int n)\n{ static int r=0;\n  if (n <= 0) return 1;\n  if (n > 3)\n  { r = n;\n    return f(n-2)+2;\n  }\n  return f(n-1)+r;\n}\nWhat is the value of f(5)?",
      "options": [
        "(A) 5",
        "(B) 7",
        "(C) 9",
        "(D) 18"
      ],
      "subject": "Programming and Data Structures",
      "chapter": "Programming in C",
      "subtopic": "Recursion",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.43",
      "question_text": "A complete n-ary tree is a tree in which each node has n children or no children. Let I be the number of internal nodes and L be the number of leaves in a complete n-ary tree. If L = 41, and I=10, what is the value of n?",
      "options": [
        "(A) 3",
        "(B) 4",
        "(C) 5",
        "(D) 6"
      ],
      "subject": "Programming and Data Structures",
      "chapter": "Data Structures",
      "subtopic": "trees, binary search trees, binary heaps, graphs",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.44",
      "question_text": "In the following C function, let n≥m.\nint gcd(n, m)\n{\n  if (n%m == 0) return m;\n  n = n%m;\n  return gcd(m,n);\n}\nHow many recursive calls are made by this function?",
      "options": [
        "(A) Θ(log₂ n)",
        "(B) Ω(n)",
        "(C) Θ(log₂ log₂ n)",
        "(D) Θ(√n)"
      ],
      "subject": "Algorithms",
      "chapter": "Analysis of Algorithms",
      "subtopic": "Asymptotic worst case time and space complexity",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.45",
      "question_text": "What is the time complexity of the following recursive function:\nint DoSomething (int n) {\n  if (n <= 2)\n    return 1;\n  else\n    return (DoSomething(floor(sqrt(n))) + n);\n}",
      "options": [
        "(A) Θ(n²)",
        "(B) Θ(nlog₂ n)",
        "(C) Θ(log₂ n)",
        "(D) Θ(log₂ log₂ n)"
      ],
      "subject": "Algorithms",
      "chapter": "Analysis of Algorithms",
      "subtopic": "Asymptotic worst case time and space complexity",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.46",
      "question_text": "Consider the following C program segment where CellNode represents a node in a binary tree:\nstruct CellNode {\n  struct CellNode *leftChild;\n  int element;\n  struct CellNode *rightChild;\n};\nint GetValue(struct CellNode *ptr) {\n  int value = 0;\n  if (ptr != NULL) {\n    if ((ptr->leftChild == NULL) &&\n        (ptr->rightChild == NULL))\n      value = 1;\n    else\n      value = value + GetValue(ptr->leftChild)\n                    + GetValue(ptr->rightChild);\n  }\n  return (value);\n}\nThe value returned by GetValue when a pointer to the root of a binary tree is passed as its argument is:",
      "options": [
        "(A) the number of nodes in the tree.",
        "(B) the number of internal nodes in the tree.",
        "(C) the number of leaf nodes in the tree.",
        "(D) the height of the tree."
      ],
      "subject": "Programming and Data Structures",
      "chapter": "Data Structures",
      "subtopic": "trees, binary search trees, binary heaps, graphs",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.47",
      "question_text": "Consider the process of inserting an element into a Max Heap, where the Max Heap is represented by an array. Suppose we perform a binary search on the path from the new leaf to the root to find the position for the newly inserted element, the number of comparisons performed is:",
      "options": [
        "(A) Θ(log₂ n)",
        "(B) Θ(log₂ log₂ n)",
        "(C) Θ(n)",
        "(D) Θ(nlog₂ n)"
      ],
      "subject": "Programming and Data Structures",
      "chapter": "Data Structures",
      "subtopic": "trees, binary search trees, binary heaps, graphs",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.48",
      "question_text": "Which of the following is TRUE about formulae in Conjunctive Normal Form?",
      "options": [
        "(A) For any formula, there is a truth assignment for which at least half the clauses evaluate to true.",
        "(B) For any formula, there is a truth assignment for which all the clauses evaluate to true.",
        "(C) There is a formula such that for each truth assignment, at most one-fourth of the clauses evaluate to true.",
        "(D) None of the above."
      ],
      "subject": "Engineering Mathematics",
      "chapter": "Discrete Mathematics",
      "subtopic": "Propositional and first order logic",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.49",
      "question_text": "Let w be the minimum weight among all edge weights in an undirected connected graph. Let e be a specific edge of weight w. Which of the following is FALSE?",
      "options": [
        "(A) There is a minimum spanning tree containing e.",
        "(B) If e is not in a minimum spanning tree T, then in the cycle formed by adding e to T, all edges have the same weight.",
        "(C) Every minimum spanning tree has an edge of weight w.",
        "(D) e is present in every minimum spanning tree."
      ],
      "subject": "Algorithms",
      "chapter": "Graph Algorithms",
      "subtopic": "minimum spanning trees",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.50",
      "question_text": "An array of n numbers is given, where n is an even number. The maximum as well as the minimum of these n numbers needs to be determined. Which of the following is TRUE about the number of comparisons needed?",
      "options": [
        "(A) At least 2n-c comparisons, for some constant c, are needed.",
        "(B) At most 1.5n-2 comparisons are needed.",
        "(C) At least nlog₂ n comparisons are needed.",
        "(D) None of the above."
      ],
      "subject": "Algorithms",
      "chapter": "Analysis of Algorithms",
      "subtopic": "Asymptotic worst case time and space complexity",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.51",
      "question_text": "Consider the following C code segment:\nint IsPrime(n)\n{\n  int i,n;\n  for(i=2;i <= sqrt(n);i++)\n    if(n%i == 0)\n      {printf(“Not Prime\\n”); return 0;}\n  return 1;\n}\nLet T(n) denote the number of times the for loop is executed by the program on input n. Which of the following is TRUE?",
      "options": [
        "(A) T(n) = O(√n) and T(n) = Ω(√n)",
        "(B) T(n) = O(√n) and T(n) = Ω(1)",
        "(C) T(n) = O(n) and T(n) = Ω(√n)",
        "(D) None of the above."
      ],
      "subject": "Algorithms",
      "chapter": "Analysis of Algorithms",
      "subtopic": "Asymptotic worst case time and space complexity",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.52",
      "question_text": "Consider the grammar with non-terminals N = {S,C,S₁}, terminals T = {a, b, i, t, e}, with S as the start symbol, and the following set of rules:\nS → iCtSS₁ | a\nS₁ → eS | ε\nC → b\nThe grammar is NOT LL(1) because:",
      "options": [
        "(A) it is left recursive.",
        "(B) it is right recursive.",
        "(C) it is ambiguous.",
        "(D) it is not context-free."
      ],
      "subject": "Compiler Design",
      "chapter": "Lexical Analysis and Parsing",
      "subtopic": "parsing",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.53",
      "question_text": "Consider the following two statements:\nP: Every regular grammar is LL(1)\nQ: Every regular set has a LR(1) grammar\nWhich of the following is TRUE?",
      "options": [
        "(A) Both P and Q are true.",
        "(B) P is true and Q is false.",
        "(C) P is false and Q is true.",
        "(D) Both P and Q are false."
      ],
      "subject": "Compiler Design",
      "chapter": "Lexical Analysis and Parsing",
      "subtopic": "parsing",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.54",
      "question_text": "In a simplified computer the instructions are:\nOP Rⱼ,Rᵢ - Performs Rⱼ OP Rᵢ and stores the result in register Rᵢ.\nOP m,Rᵢ - Performs val OP Rᵢ and stores the result in Rᵢ. val denotes the content of memory location m.\nMOV m,Rᵢ - Moves the content of memory location m to register Rᵢ.\nMOV Rᵢ,m - Moves the content of register Rᵢ to memory location m.\nThe computer has only two registers, and OP is either ADD or SUB. Consider the following basic block:\nt₁ = a + b\nt₂ = c + d\nt₃ = e – t₂\nt₄ = t₁ – t₃\nAssume that all operands are initially in memory. The final value of the computation should be in memory. What is the minimum number of MOV instructions in the code generated for this basic block?",
      "options": [
        "(A) 2",
        "(B) 3",
        "(C) 5",
        "(D) 6"
      ],
      "subject": "Compiler Design",
      "chapter": "Intermediate Code Generation",
      "subtopic": "Intermediate code generation",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 0.9
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.55",
      "question_text": "An operating system uses Shortest Remaining Time first (SRT) process scheduling algorithm. Consider the arrival times and execution times for the following processes:\nProcess\tExecution time\tArrival time\nP1\t20\t0\nP2\t25\t15\nP3\t10\t30\nP4\t15\t45\nWhat is the total waiting time for process P2?",
      "options": [
        "(A) 5",
        "(B) 15",
        "(C) 40",
        "(D) 55"
      ],
      "subject": "Operating System",
      "chapter": "CPU Scheduling",
      "subtopic": "CPU and I/O scheduling",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.56",
      "question_text": "A virtual memory system uses First In First Out (FIFO) page replacement policy and allocates a fixed number of frames to a process. Consider the following statements:\nP: Increasing the number of page frames allocated to a process sometimes increases the page fault rate.\nQ: Some programs do not exhibit locality of reference.\nWhich one of the following is TRUE?",
      "options": [
        "(A) Both P and Q are true, and Q is the reason for P.",
        "(B) Both P and Q are true, but Q is not the reason for P.",
        "(C) P is false, but Q is true.",
        "(D) Both P and Q are false."
      ],
      "subject": "Operating System",
      "chapter": "Memory Management",
      "subtopic": "Memory management and virtual memory",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.57",
      "question_text": "A single processor system has three resource types X, Y, and Z, which are shared by three processes. There are 5 units of each resource type. Consider the following scenario, where the column alloc denotes the number of units of each resource type allocated to each process, and the column request denotes the number of units of each resource type requested by a process in order to complete execution. Which of these processes will finish LAST?\n... [table omitted] ...",
      "options": [
        "(A) P0",
        "(B) P1",
        "(C) P2",
        "(D) None of the above, since the system is in a deadlock."
      ],
      "subject": "Operating System",
      "chapter": "Concurrency and Synchronization",
      "subtopic": "Deadlock",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.58",
      "question_text": "Two processes, P1 and P2, need to access a critical section of code. Consider the following synchronization construct used by the processes:\n... [code omitted] ...\nHere, wants1 and wants2 are shared variables, which are initialized to false. Which one of the following statements is TRUE about the above construct?",
      "options": [
        "(A) It does not ensure mutual exclusion.",
        "(B) It does not ensure bounded waiting.",
        "(C) It requires that processes enter the critical section in strict alternation.",
        "(D) It does not prevent deadlocks, but ensures mutual exclusion."
      ],
      "subject": "Operating System",
      "chapter": "Concurrency and Synchronization",
      "subtopic": "concurrency and synchronization",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.59",
      "question_text": "Information about a collection of students is given by the relation studInfo(studId, name, sex). The relation enroll(studId, courseId) gives which student has enrolled for (or taken) what course(s). Assume that every course is taken by at least one male and at least one female student. What does the following relational algebra expression represent?\nΠcourseId ((ΠstudId(σsex = \"female\"(studInfo)) × ΠcourseId(enroll)) – enroll)",
      "options": [
        "(A) Courses in which all the female students are enrolled.",
        "(B) Courses in which a proper subset of female students are enrolled.",
        "(C) Courses in which only male students are enrolled.",
        "(D) None of the above."
      ],
      "subject": "Databases",
      "chapter": "ER-Model and Relational Model",
      "subtopic": "Relational model: relational algebra, tuple calculus",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.60",
      "question_text": "Consider the relation employee(name, sex, supervisorName) with name as the key. supervisorName gives the name of the supervisor of the employee under consideration. What does the following Tuple Relational Calculus query produce?\n{e.name | employee(e) ∧ (∀x)[¬employee(x) ∨ x.supervisorName ≠ e.name ∨ x.sex = “male”]}",
      "options": [
        "(A) Names of employees with a male supervisor.",
        "(B) Names of employees with no immediate male subordinates.",
        "(C) Names of employees with no immediate female subordinates.",
        "(D) Names of employees with a female supervisor."
      ],
      "subject": "Databases",
      "chapter": "ER-Model and Relational Model",
      "subtopic": "Relational model: relational algebra, tuple calculus",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.61",
      "question_text": "Consider the table employee(empId, name, department, salary) and the two queries Q₁, Q₂ below. Assuming that department 5 has more than one employee, and we want to find the employees who get higher salary than anyone in the department 5, which one of the statements is TRUE for any arbitrary employee table?\nQ₁: Select e.empId\n    From employee e\n    Where not exists\n      (Select * From employee s Where s.department = “5” and s.salary >= e.salary)\nQ₂: Select e.empId\n    From employee e\n    Where e.salary > Any\n      (Select distinct salary From employee s Where s.department = “5”)",
      "options": [
        "(A) Q₁ is the correct query.",
        "(B) Q₂ is the correct query.",
        "(C) Both Q₁ and Q₂ produce the same answer.",
        "(D) Neither Q₁ nor Q₂ is the correct query."
      ],
      "subject": "Databases",
      "chapter": "SQL",
      "subtopic": "SQL",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.62",
      "question_text": "Which one of the following statements is FALSE?",
      "options": [
        "(A) Any relation with two attributes is in BCNF.",
        "(B) A relation in which every key has only one attribute is in 2NF.",
        "(C) A prime attribute can be transitively dependent on a key in a 3NF relation.",
        "(D) A prime attribute can be transitively dependent on a key in a BCNF relation."
      ],
      "subject": "Databases",
      "chapter": "Integrity and Normalization",
      "subtopic": "Integrity constraints, normal forms",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.63",
      "question_text": "The order of a leaf node in a B⁺-tree is the maximum number of (value, data record pointer) pairs it can hold. Given that the block size is 1K bytes, data record pointer is 7 bytes long, the value field is 9 bytes long and a block pointer is 6 bytes long, what is the order of the leaf node?",
      "options": [
        "(A) 63",
        "(B) 64",
        "(C) 67",
        "(D) 68"
      ],
      "subject": "Databases",
      "chapter": "File Organization and Indexing",
      "subtopic": "File organization, indexing (e.g., B and B+ trees)",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.64",
      "question_text": "Consider the following schedules involving two transactions. Which one of the following statements is TRUE?\nS₁: r₁(X); r₁(Y); r₂(X); r₂(Y); w₂(Y); w₁(X)\nS₂: r₁(X); r₂(X); r₂(Y); w₂(Y); r₁(Y); w₁(X)",
      "options": [
        "(A) Both S₁ and S₂ are conflict serializable.",
        "(B) S₁ is conflict serializable and S₂ is not conflict serializable.",
        "(C) S₁ is not conflict serializable and S₂ is conflict serializable.",
        "(D) Both S₁ and S₂ are not conflict serializable."
      ],
      "subject": "Databases",
      "chapter": "Transactions and Concurrency Control",
      "subtopic": "Transactions and concurrency control",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.65",
      "question_text": "There are n stations in a slotted LAN. Each station attempts to transmit with a probability p in each time slot. What is the probability that ONLY one station transmits in a given time slot?",
      "options": [
        "(A) np(1-p)ⁿ⁻¹",
        "(B) (1-p)ⁿ⁻¹",
        "(C) p(1-p)ⁿ⁻¹",
        "(D) 1-(1-p)ⁿ⁻¹"
      ],
      "subject": "Computer Networks",
      "chapter": "Data Link Layer",
      "subtopic": "Data link layer: framing, error detection, Medium Access Control, Ethernet bridging",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.66",
      "question_text": "In a token ring network the transmission speed is 10⁷ bps and the propagation speed is 200 metres/µs. The 1-bit delay in this network is equivalent to:",
      "options": [
        "(A) 500 metres of cable.",
        "(B) 200 metres of cable.",
        "(C) 20 metres of cable.",
        "(D) 50 metres of cable."
      ],
      "subject": "Computer Networks",
      "chapter": "Data Link Layer",
      "subtopic": "Data link layer: framing, error detection, Medium Access Control, Ethernet bridging",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.67",
      "question_text": "The address of a class B host is to be split into subnets with a 6-bit subnet number. What is the maximum number of subnets and the maximum number of hosts in each subnet?",
      "options": [
        "(A) 62 subnets and 262142 hosts.",
        "(B) 64 subnets and 262142 hosts.",
        "(C) 62 subnets and 1022 hosts.",
        "(D) 64 subnets and 1024 hosts."
      ],
      "subject": "Computer Networks",
      "chapter": "Network Layer",
      "subtopic": "Fragmentation and IP addressing, IPv4, CIDR notation, Basics of IP support protocols (ARP, DHCP, ICMP), Network Address Translation (NAT)",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.68",
      "question_text": "The message 11001001 is to be transmitted using the CRC polynomial x³ + 1 to protect it from errors. The message that should be transmitted is:",
      "options": [
        "(A) 11001001000",
        "(B) 11001001011",
        "(C) 11001010",
        "(D) 110010010011"
      ],
      "subject": "Computer Networks",
      "chapter": "Data Link Layer",
      "subtopic": "Data link layer: framing, error detection, Medium Access Control, Ethernet bridging",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.69",
      "question_text": "The distance between two stations M and N is L kilometres. All frames are K bits long. The propagation delay per kilometre is t seconds. Let R bits/second be the channel capacity. Assuming that processing delay is negligible, the minimum number of bits for the sequence number field in a frame for maximum utilization, when the sliding window protocol is used, is:",
      "options": [
        "(A) ⌈log₂((2LtR+2K)/K)⌉",
        "(B) ⌈log₂(2LtR/K)⌉",
        "(C) ⌈log₂((2LtR+K)/K)⌉",
        "(D) ⌈log₂((2LtR+K)/(2K))⌉"
      ],
      "subject": "Computer Networks",
      "chapter": "Transport Layer",
      "subtopic": "Transport layer: flow control and congestion control, UDP, TCP, sockets",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 0.9
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.70",
      "question_text": "Match the following:\nP. SMTP\t1. Application layer\nQ. BGP\t2. Transport layer\nR. TCP\t3. Data link layer\nS. PPP\t4. Network layer\n\t5. Physical layer",
      "options": [
        "(A) P-2, Q-1, R-3, S-5",
        "(B) P-1, Q-4, R-2, S-3",
        "(C) P-1, Q-4, R-2, S-5",
        "(D) P-2, Q-4, R-1, S-3"
      ],
      "subject": "Computer Networks",
      "chapter": "Layering and Switching",
      "subtopic": "Concept of layering: OSI and TCP/IP Protocol Stacks; Basics of packet, circuit and virtual circuit-switching",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.71",
      "question_text": "Common Data for Questions 71,72,73:\nConsider the following program segment. Here R1, R2 and R3 are the general purpose registers.\n... [code omitted] ...\nAssume that the content of memory location 3000 is 10 and the content of the register R3 is 2000. The content of each of the memory locations from 2000 to 2010 is 100. The program is loaded from the memory location 1000. All the numbers are in decimal.\nAssume that the memory is word addressable. The number of memory references for accessing the data in executing the program completely is",
      "options": [
        "(A) 10",
        "(B) 11",
        "(C) 20",
        "(D) 21"
      ],
      "subject": "Computer Organization and Architecture",
      "chapter": "Instruction Set Architecture",
      "subtopic": "Machine instructions and addressing modes",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.72",
      "question_text": "Assume that the memory is word addressable. After the execution of this program, the content of memory location 2010 is",
      "options": [
        "(A) 100",
        "(B) 101",
        "(C) 102",
        "(D) 110"
      ],
      "subject": "Computer Organization and Architecture",
      "chapter": "Instruction Set Architecture",
      "subtopic": "Machine instructions and addressing modes",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.73",
      "question_text": "Assume that the memory is byte addressable and the word size is 32 bits. If an interrupt occurs during the execution of the instruction “INC R3”, what return address will be pushed on to the stack?",
      "options": [
        "(A) 1005",
        "(B) 1020",
        "(C) 1024",
        "(D) 1040"
      ],
      "subject": "Computer Organization and Architecture",
      "chapter": "I/O Interface",
      "subtopic": "I/O interface (interrupt and DMA mode)",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.74",
      "question_text": "Common Data for Questions 74, 75:\nConsider the following Finite State Automaton:\n... [diagram omitted] ...\nThe language accepted by this automaton is given by the regular expression",
      "options": [
        "(A) b*ab*ab*ab*",
        "(B) (a+b)*",
        "(C) b*a(a+b)*",
        "(D) b*ab*ab*"
      ],
      "subject": "Theory of Computation",
      "chapter": "Regular Languages and Finite Automata",
      "subtopic": "Regular expressions and finite automata",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.75",
      "question_text": "The minimum state automaton equivalent to the above FSA has the following number of states",
      "options": [
        "(A) 1",
        "(B) 2",
        "(C) 3",
        "(D) 4"
      ],
      "subject": "Theory of Computation",
      "chapter": "Regular Languages and Finite Automata",
      "subtopic": "Regular expressions and finite automata",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.76",
      "question_text": "Statement for Linked Answer Questions 76 & 77:\nSuppose the letters a,b,c,d,e,f have probabilities 1/2, 1/4, 1/8, 1/16, 1/32, 1/32, respectively.\nWhich of the following is the Huffman code for the letters a,b,c,d,e,f?",
      "options": [
        "(A) 0,10,110,1110,11110,11111",
        "(B) 11,10,011,010,001,000",
        "(C) 11,10,01,001,0001,0000",
        "(D) 110,100,010,000,001,111"
      ],
      "subject": "Algorithms",
      "chapter": "Algorithm Design Techniques",
      "subtopic": "greedy, dynamic programming and divide-and-conquer",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.77",
      "question_text": "What is the average length of the correct answer to Q.76?",
      "options": [
        "(A) 3",
        "(B) 2.1875",
        "(C) 2.25",
        "(D) 1.9375"
      ],
      "subject": "Algorithms",
      "chapter": "Algorithm Design Techniques",
      "subtopic": "greedy, dynamic programming and divide-and-conquer",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.78",
      "question_text": "Statement for Linked Answer Questions 78 & 79:\nConsider the CFG with {S, A, B} as the non-terminal alphabet, {a,b} as the terminal alphabet, S as the start symbol and the following set of production rules:\nS → aB\tS → bA\nA → a\tA → aS\nA → bAA\tB → b\nB → bS\tB → aBB\nWhich of the following strings is generated by the grammar?",
      "options": [
        "(A) aaaabb",
        "(B) aabbbb",
        "(C) aabbab",
        "(D) abbbba"
      ],
      "subject": "Theory of Computation",
      "chapter": "Context-Free Languages and Pushdown Automata",
      "subtopic": "Context-free grammars and push-down automata",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.79",
      "question_text": "For the correct answer string to Q.78, how many derivation trees are there?",
      "options": [
        "(A) 1",
        "(B) 2",
        "(C) 3",
        "(D) 4"
      ],
      "subject": "Theory of Computation",
      "chapter": "Context-Free Languages and Pushdown Automata",
      "subtopic": "Context-free grammars and push-down automata",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.80",
      "question_text": "Statement for Linked Answer Questions 80 & 81:\nConsider a machine with a byte addressable main memory of 2¹⁶ bytes. Assume that a direct mapped data cache consisting of 32 lines of 64 bytes each is used in the system. A 50 × 50 two-dimensional array of bytes is stored in the main memory starting from memory location 1100H. Assume that the data cache is initially empty. The complete array is accessed twice. Assume that the contents of the data cache do not change in between the two accesses.\nHow many data cache misses will occur in total?",
      "options": [
        "(A) 48",
        "(B) 50",
        "(C) 56",
        "(D) 59"
      ],
      "subject": "Computer Organization and Architecture",
      "chapter": "Memory Hierarchy",
      "subtopic": "Memory hierarchy: cache, main memory and secondary storage",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.81",
      "question_text": "Which of the following lines of the data cache will be replaced by new blocks in accessing the array for the second time?",
      "options": [
        "(A) line 4 to line 11",
        "(B) line 4 to line 12",
        "(C) line 0 to line 7",
        "(D) line 0 to line 8"
      ],
      "subject": "Computer Organization and Architecture",
      "chapter": "Memory Hierarchy",
      "subtopic": "Memory hierarchy: cache, main memory and secondary storage",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.82",
      "question_text": "Statement for Linked Answer Questions 82 & 83:\nA process has been allocated 3 page frames. Assume that none of the pages of the process are available in the memory initially. The process makes the following sequence of page references (reference string): 1, 2, 1, 3, 7, 4, 5, 6, 3, 1\nIf optimal page replacement policy is used, how many page faults occur for the above reference string?",
      "options": [
        "(A) 7",
        "(B) 8",
        "(C) 9",
        "(D) 10"
      ],
      "subject": "Operating System",
      "chapter": "Memory Management",
      "subtopic": "Memory management and virtual memory",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.83",
      "question_text": "Least Recently Used (LRU) page replacement policy is a practical approximation to optimal page replacement. For the above reference string, how many more page faults occur with LRU than with the optimal page replacement policy?",
      "options": [
        "(A) 0",
        "(B) 1",
        "(C) 2",
        "(D) 3"
      ],
      "subject": "Operating System",
      "chapter": "Memory Management",
      "subtopic": "Memory management and virtual memory",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.84",
      "question_text": "Statement for Linked Answer Questions 84 & 85:\nSuppose that a robot is placed on the Cartesian plane. At each step it is allowed to move either one unit up or one unit right, i.e., if it is at (i, j) then it can move to either (i+1, j) or (i, j+1).\nHow many distinct paths are there for the robot to reach the point (10,10) starting from the initial position (0,0)?",
      "options": [
        "(A) (²⁰₁₀)",
        "(B) 2²⁰",
        "(C) 2¹⁰",
        "(D) None of the above"
      ],
      "subject": "Engineering Mathematics",
      "chapter": "Discrete Mathematics",
      "subtopic": "Combinatorics: counting, recurrence relations, generating functions",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    },
    {
      "year": 2007,
      "paper_code": "CS",
      "question_no": "Q.85",
      "question_text": "Suppose that the robot is not allowed to traverse the line segment from (4,4) to (5,4). With this constraint, how many distinct paths are there for the robot to reach (10,10) starting from (0,0)?",
      "options": [
        "(A) 2⁹",
        "(B) 2¹⁹",
        "(C) (⁸₄) × (¹¹₅)",
        "(D) (²⁰₁₀) – (⁸₄) × (¹¹₅)"
      ],
      "subject": "Engineering Mathematics",
      "chapter": "Discrete Mathematics",
      "subtopic": "Combinatorics: counting, recurrence relations, generating functions",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2007_CS_Paper",
      "confidence": 1.0
    }
  ]