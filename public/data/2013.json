[
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.1",
    "question_text": "A binary operation ⊕ on a set of integers is defined as x⊕y=x² + y². Which one of the following statements is TRUE about ⊕?",
    "options": [
      "(A) Commutative but not associative",
      "(B) Both commutative and associative",
      "(C) Associative but not commutative",
      "(D) Neither commutative nor associative"
    ],
    "subject": "Engineering Mathematics",
    "chapter": "Discrete Mathematics",
    "subtopic": "Sets, relations, functions, partial orders and lattices",
    "theoretical_practical": "theoretical",
    "marks": 1,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 0.9
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.2",
    "question_text": "Suppose p is the number of cars per minute passing through a certain road junction between 5 PM and 6 PM, and p has a Poisson distribution with mean 3. What is the probability of observing fewer than 3 cars during any given minute in this interval?",
    "options": [
      "(A) 8/(2e³)",
      "(B) 9/(2e³)",
      "(C) 17/(2e³)",
      "(D) 26/(2e³)"
    ],
    "subject": "Engineering Mathematics",
    "chapter": "Probability and Statistics",
    "subtopic": "Random variables, Uniform, normal, exponential, Poisson and binomial distributions",
    "theoretical_practical": "practical",
    "marks": 1,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.3",
    "question_text": "Which one of the following does NOT equal | 1 x x² |\n| 1 y y² |\n| 1 z z² |?",
    "options": [
      "(A) | 1 x(x+1) x+1 |\n| 1 y(y+1) y+1 |\n| 1 z(z+1) z+1 |",
      "(B) | 1 x+1 x²+1 |\n| 1 y+1 y²+1 |\n| 1 z+1 z²+1 |",
      "(C) | 0 x-y x²-y² |\n| 0 y-z y²-z² |\n| 1 z z² |",
      "(D) | 2 x+y x²+y² |\n| 2 y+z y²+z² |\n| 1 z z² |"
    ],
    "subject": "Engineering Mathematics",
    "chapter": "Linear Algebra",
    "subtopic": "Matrices, determinants, system of linear equations",
    "theoretical_practical": "practical",
    "marks": 1,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.4",
    "question_text": "The smallest integer that can be represented by an 8-bit number in 2's complement form is",
    "options": [
      "(A) -256",
      "(B) -128",
      "(C) -127",
      "(D) 0"
    ],
    "subject": "Digital Logic",
    "chapter": "Digital Logic",
    "subtopic": "Number representations and computer arithmetic (fixed and floating point)",
    "theoretical_practical": "theoretical",
    "marks": 1,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.5",
    "question_text": "In the following truth table, V = 1 if and only if the input is valid.\n\nInputs Outputs\nDo D1 D2 D3 X0 X1 V\n0  0  0  0  x  x  0\n1  0  0  0  0  0  1\nx  1  0  0  0  1  1\nx  x  1  0  1  0  1\nx  x  x  1  1  1  1\n\nWhat function does the truth table represent?",
    "options": [
      "(A) Priority encoder",
      "(B) Decoder",
      "(C) Multiplexer",
      "(D) Demultiplexer"
    ],
    "subject": "Digital Logic",
    "chapter": "Digital Logic",
    "subtopic": "Combinational and sequential circuits",
    "theoretical_practical": "practical",
    "marks": 1,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.6",
    "question_text": "Which one of the following is the tightest upper bound that represents the number of swaps required to sort n numbers using selection sort?",
    "options": [
      "(A) O(log n)",
      "(B) O(n)",
      "(C) O(n log n)",
      "(D) O(n²)"
    ],
    "subject": "Algorithms",
    "chapter": "Algorithms",
    "subtopic": "Asymptotic worst case time and space complexity",
    "theoretical_practical": "theoretical",
    "marks": 1,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.7",
    "question_text": "Which one of the following is the tightest upper bound that represents the time complexity of inserting an object into a binary search tree of n nodes?",
    "options": [
      "(A) O(1)",
      "(B) O(log n)",
      "(C) O(n)",
      "(D) O(n log n)"
    ],
    "subject": "Programming and Data Structures",
    "chapter": "Programming and Data Structures",
    "subtopic": "trees, binary search trees, binary heaps, graphs",
    "theoretical_practical": "theoretical",
    "marks": 1,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.8",
    "question_text": "Consider the languages L₁ = Φ and L₂ = {a}. Which one of the following represents L₁ L₂* ∪ L₁* ?",
    "options": [
      "(A) {ε}",
      "(B) Φ",
      "(C) a*",
      "(D) {ε, a}"
    ],
    "subject": "Theory of Computation",
    "chapter": "Theory of Computation",
    "subtopic": "Regular expressions and finite automata",
    "theoretical_practical": "theoretical",
    "marks": 1,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.9",
    "question_text": "What is the maximum number of reduce moves that can be taken by a bottom-up parser for a grammar with no epsilon- and unit-production (i.e., of type A → ε and A → a) to parse a string with n tokens?",
    "options": [
      "(A) n/2",
      "(B) n-1",
      "(C) 2n-1",
      "(D) 2ⁿ"
    ],
    "subject": "Compiler Design",
    "chapter": "Compiler Design",
    "subtopic": "parsing",
    "theoretical_practical": "theoretical",
    "marks": 1,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.10",
    "question_text": "A scheduling algorithm assigns priority proportional to the waiting time of a process. Every process starts with priority zero (the lowest priority). The scheduler re-evaluates the process priorities every T time units and decides the next process to schedule. Which one of the following is TRUE if the processes have no I/O operations and all arrive at time zero?",
    "options": [
      "(A) This algorithm is equivalent to the first-come-first-serve algorithm.",
      "(B) This algorithm is equivalent to the round-robin algorithm.",
      "(C) This algorithm is equivalent to the shortest-job-first algorithm.",
      "(D) This algorithm is equivalent to the shortest-remaining-time-first algorithm."
    ],
    "subject": "Operating System",
    "chapter": "Operating System",
    "subtopic": "CPU and I/O scheduling",
    "theoretical_practical": "theoretical",
    "marks": 1,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.11",
    "question_text": "Match the problem domains in GROUP I with the solution technologies in GROUP II.\n\nGROUP I\n(P) Service oriented computing\n(Q) Heterogeneous communicating systems\n(R) Information representation\n(S) Process description\n\nGROUP II\n(1) Interoperability\n(2) BPMN\n(3) Publish-find-bind\n(4) XML",
    "options": [
      "(A) P-1, Q-2, R-3, S-4",
      "(B) P-3, Q-4, R-2, S-1",
      "(C) P-3, Q-1, R-4, S-2",
      "(D) P-4, Q-3, R-2, S-1"
    ],
    "subject": "Databases",
    "chapter": "Databases",
    "subtopic": "OTHER: Information representation and technologies",
    "theoretical_practical": "theoretical",
    "marks": 1,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 0.4
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.12",
    "question_text": "The transport layer protocols used for real time multimedia, file transfer, DNS and email, respectively are",
    "options": [
      "(A) TCP, UDP, UDP and TCP",
      "(B) UDP, TCP, TCP and UDP",
      "(C) UDP, TCP, UDP and TCP",
      "(D) TCP, UDP, TCP and UDP"
    ],
    "subject": "Computer Networks",
    "chapter": "Computer Networks",
    "subtopic": "Transport layer: flow control and congestion control, UDP, TCP, sockets",
    "theoretical_practical": "theoretical",
    "marks": 1,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.13",
    "question_text": "Using public key cryptography, X adds a digital signature σ to message M, encrypts <Μ, σ>, and sends it to Y, where it is decrypted. Which one of the following sequences of keys is used for the operations?",
    "options": [
      "(A) Encryption: X's private key followed by Y's private key; Decryption: X's public key followed by Y's public key",
      "(B) Encryption: X's private key followed by Y's public key; Decryption: X's public key followed by Y's private key",
      "(C) Encryption: X's public key followed by Y's private key; Decryption: Y's public key followed by X's private key",
      "(D) Encryption: X's private key followed by Y's public key; Decryption: Y's private key followed by X's public key"
    ],
    "subject": "Computer Networks",
    "chapter": "Computer Networks",
    "subtopic": "OTHER: Public Key Cryptography",
    "theoretical_practical": "theoretical",
    "marks": 1,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 0.5
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.14",
    "question_text": "Assume that source S and destination D are connected through two intermediate routers labeled R. Determine how many times each packet has to visit the network layer and the data link layer during a transmission from S to D.\n(Image of S -> R -> R -> D)",
    "options": [
      "(A) Network layer – 4 times and Data link layer – 4 times",
      "(B) Network layer – 4 times and Data link layer – 3 times",
      "(C) Network layer – 4 times and Data link layer – 6 times",
      "(D) Network layer – 2 times and Data link layer – 6 times"
    ],
    "subject": "Computer Networks",
    "chapter": "Computer Networks",
    "subtopic": "Concept of layering: OSI and TCP/IP Protocol Stacks",
    "theoretical_practical": "theoretical",
    "marks": 1,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.15",
    "question_text": "An index is clustered, if",
    "options": [
      "(A) it is on a set of fields that form a candidate key.",
      "(B) it is on a set of fields that include the primary key.",
      "(C) the data records of the file are organized in the same order as the data entries of the index.",
      "(D) the data records of the file are organized not in the same order as the data entries of the index."
    ],
    "subject": "Databases",
    "chapter": "Databases",
    "subtopic": "File organization, indexing (e.g., B and B+ trees)",
    "theoretical_practical": "theoretical",
    "marks": 1,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.16",
    "question_text": "Three concurrent processes X, Y, and Z execute three different code segments that access and update certain shared variables. Process X executes the P operation (i.e., wait) on semaphores a, b and c; process Y executes the P operation on semaphores b, c and d; process Z executes the P operation on semaphores c, d, and a before entering the respective code segments. After completing the execution of its code segment, each process invokes the V operation (i.e., signal) on its three semaphores. All semaphores are binary semaphores initialized to one. Which one of the following represents a deadlock-free order of invoking the P operations by the processes?",
    "options": [
      "(A) X: P(a)P(b)P(c)   Y: P(b)P(c)P(d)   Z: P(c)P(d)P(a)",
      "(B) X: P(b)P(a)P(c)   Y: P(b)P(c)P(d)   Z: P(a)P(c)P(d)",
      "(C) X: P(b)P(a)P(c)   Y: P(c)P(b)P(d)   Z: P(a)P(c)P(d)",
      "(D) X: P(a)P(b)P(c)   Y: P(c)P(b)P(d)   Z: P(c)P(d)P(a)"
    ],
    "subject": "Operating System",
    "chapter": "Operating System",
    "subtopic": "Deadlock",
    "theoretical_practical": "practical",
    "marks": 1,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.17",
    "question_text": "Which of the following statements is/are FALSE?\n1. For every non-deterministic Turing machine, there exists an equivalent deterministic Turing machine.\n2. Turing recognizable languages are closed under union and complementation.\n3. Turing decidable languages are closed under intersection and complementation.\n4. Turing recognizable languages are closed under union and intersection.",
    "options": [
      "(A) 1 and 4 only",
      "(B) 1 and 3 only",
      "(C) 2 only",
      "(D) 3 only"
    ],
    "subject": "Theory of Computation",
    "chapter": "Theory of Computation",
    "subtopic": "Turing machines and undecidability",
    "theoretical_practical": "theoretical",
    "marks": 1,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.18",
    "question_text": "Which of the following statements are TRUE?\n1. The problem of determining whether there exists a cycle in an undirected graph is in P.\n2. The problem of determining whether there exists a cycle in an undirected graph is in NP.\n3. If a problem A is NP-Complete, there exists a non-deterministic polynomial time algorithm to solve A.",
    "options": [
      "(A) 1, 2 and 3",
      "(B) 1 and 2 only",
      "(C) 2 and 3 only",
      "(D) 1 and 3 only"
    ],
    "subject": "Theory of Computation",
    "chapter": "Theory of Computation",
    "subtopic": "OTHER: Complexity Classes (P, NP)",
    "theoretical_practical": "theoretical",
    "marks": 1,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 0.5
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.19",
    "question_text": "What is the time complexity of Bellman-Ford single-source shortest path algorithm on a complete graph of n vertices?",
    "options": [
      "(A) Θ(n²)",
      "(B) Θ(n²log n)",
      "(C) Θ(n³)",
      "(D) Θ(n³log n)"
    ],
    "subject": "Algorithms",
    "chapter": "Algorithms",
    "subtopic": "shortest paths",
    "theoretical_practical": "theoretical",
    "marks": 1,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.20",
    "question_text": "In a k-way set associative cache, the cache is divided into v sets, each of which consists of k lines. The lines of a set are placed in sequence one after another. The lines in set s are sequenced before the lines in set (s+1). The main memory blocks are numbered 0 onwards. The main memory block numbered j must be mapped to any one of the cache lines from",
    "options": [
      "(A) (j mod v) * k to (j mod v) * k + (k-1)",
      "(B) (j mod v) to (j mod v) + (k-1)",
      "(C) (j mod k) to (j mod k) + (v-1)",
      "(D) (j mod k) * v to (j mod k) * v + (v-1)"
    ],
    "subject": "Computer Organization and Architecture",
    "chapter": "Computer Organization and Architecture",
    "subtopic": "Memory hierarchy: cache, main memory and secondary storage",
    "theoretical_practical": "practical",
    "marks": 1,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.21",
    "question_text": "Which one of the following expressions does NOT represent exclusive NOR of x and y?",
    "options": [
      "(A) xy+x'y'",
      "(B) x⊕y'",
      "(C) x'⊕y",
      "(D) x'⊕y'"
    ],
    "subject": "Digital Logic",
    "chapter": "Digital Logic",
    "subtopic": "Boolean algebra",
    "theoretical_practical": "theoretical",
    "marks": 1,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.22",
    "question_text": "Which one of the following functions is continuous at x = 3?",
    "options": [
      "(A) f(x) = { 2, if x=3; x-1, if x>3; (x+3)/3, if x<3 }",
      "(B) f(x) = { 4, if x=3; 8-x, if x≠3 }",
      "(C) f(x) = { x+3, if x≤3; x-4, if x>3 }",
      "(D) f(x) = 1/(x³-27), if x≠3"
    ],
    "subject": "Engineering Mathematics",
    "chapter": "Calculus",
    "subtopic": "Limits, continuity and differentiability",
    "theoretical_practical": "practical",
    "marks": 1,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.23",
    "question_text": "Function f is known at the following points:\nx    0   0.3  0.6  0.9  1.2  1.5  1.8  2.1  2.4  2.7  3.0\nf(x) 0  0.09 0.36 0.81 1.44 2.25 3.24 4.41 5.76 7.29 9.00\n\nThe value of ∫₀³ f(x) dx computed using the trapezoidal rule is",
    "options": [
      "(A) 8.983",
      "(B) 9.003",
      "(C) 9.017",
      "(D) 9.045"
    ],
    "subject": "Engineering Mathematics",
    "chapter": "Calculus",
    "subtopic": "Integration",
    "theoretical_practical": "practical",
    "marks": 1,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.24",
    "question_text": "Consider an undirected random graph of eight vertices. The probability that there is an edge between a pair of vertices is 1/2. What is the expected number of unordered cycles of length three?",
    "options": [
      "(A) 1/8",
      "(B) 1",
      "(C) 7",
      "(D) 8"
    ],
    "subject": "Engineering Mathematics",
    "chapter": "Discrete Mathematics",
    "subtopic": "Graphs: connectivity, matching, colouring",
    "theoretical_practical": "practical",
    "marks": 1,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.25",
    "question_text": "Which of the following statements is/are TRUE for undirected graphs?\nP: Number of odd degree vertices is even.\nQ: Sum of degrees of all vertices is even.",
    "options": [
      "(A) P only",
      "(B) Q only",
      "(C) Both P and Q",
      "(D) Neither P nor Q"
    ],
    "subject": "Engineering Mathematics",
    "chapter": "Discrete Mathematics",
    "subtopic": "Graphs: connectivity, matching, colouring",
    "theoretical_practical": "theoretical",
    "marks": 1,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.26",
    "question_text": "The line graph L(G) of a simple graph G is defined as follows:\n\n- There is exactly one vertex v(e) in L(G) for each edge e in G.\n- For any two edges e and e' in G, L(G) has an edge between v(e) and v(e'), if and only if e and e' are incident with the same vertex in G.\n\nWhich of the following statements is/are TRUE?\n(P) The line graph of a cycle is a cycle.\n(Q) The line graph of a clique is a clique.\n(R) The line graph of a planar graph is planar.\n(S) The line graph of a tree is a tree.",
    "options": [
      "(A) P only",
      "(B) P and R only",
      "(C) R only",
      "(D) P, Q and S only"
    ],
    "subject": "Engineering Mathematics",
    "chapter": "Discrete Mathematics",
    "subtopic": "Graphs: connectivity, matching, colouring",
    "theoretical_practical": "theoretical",
    "marks": 2,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.27",
    "question_text": "What is the logical translation of the following statement?\n\"None of my friends are perfect.\"",
    "options": [
      "(A) ∃x(F(x) ∧ ¬P(x))",
      "(B) ∃x(¬F(x) ∧ P(x))",
      "(C) ∃x(¬F(x) ∧ ¬P(x))",
      "(D) ¬∃x(F(x) ∧ P(x))"
    ],
    "subject": "Engineering Mathematics",
    "chapter": "Discrete Mathematics",
    "subtopic": "Propositional and first order logic",
    "theoretical_practical": "practical",
    "marks": 2,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.28",
    "question_text": "Consider the following sequence of micro-operations.\n\nMBR ← PC\nMAR ← X\nPC ← Y\nMemory ← MBR\n\nWhich one of the following is a possible operation performed by this sequence?",
    "options": [
      "(A) Instruction fetch",
      "(B) Operand fetch",
      "(C) Conditional branch",
      "(D) Initiation of interrupt service"
    ],
    "subject": "Computer Organization and Architecture",
    "chapter": "Computer Organization and Architecture",
    "subtopic": "I/O interface (interrupt and DMA mode)",
    "theoretical_practical": "theoretical",
    "marks": 2,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 0.8
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.29",
    "question_text": "Consider a hard disk with 16 recording surfaces (0-15) having 16384 cylinders (0-16383) and each cylinder contains 64 sectors (0-63). Data storage capacity in each sector is 512 bytes. Data are organized cylinder-wise and the addressing format is <cylinder no., surface no., sector no.>. A file of size 42797 KB is stored in the disk and the starting disk location of the file is <1200, 9, 40>. What is the cylinder number of the last sector of the file, if it is stored in a contiguous manner?",
    "options": [
      "(A) 1281",
      "(B) 1282",
      "(C) 1283",
      "(D) 1284"
    ],
    "subject": "Operating System",
    "chapter": "Operating System",
    "subtopic": "File systems",
    "theoretical_practical": "practical",
    "marks": 2,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 0.9
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.30",
    "question_text": "The number of elements that can be sorted in Θ(log n) time using heap sort is",
    "options": [
      "(A) Θ(1)",
      "(B) Θ(√log n)",
      "(C) Θ(log n / log log n)",
      "(D) Θ(log n)"
    ],
    "subject": "Algorithms",
    "chapter": "Algorithms",
    "subtopic": "Searching, sorting, hashing",
    "theoretical_practical": "theoretical",
    "marks": 2,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.31",
    "question_text": "Consider the following function:\n\nint unknown(int n){\n  int i, j, k=0;\n  for (i=n/2; i<=n; i++)\n    for (j=2; j<=n; j=j*2)\n      k = k + n/2;\n  return (k);\n}\n\nThe return value of the function is",
    "options": [
      "(A) Θ(n²)",
      "(B) Θ(n²log n)",
      "(C) Θ(n³)",
      "(D) Θ(n³log n)"
    ],
    "subject": "Algorithms",
    "chapter": "Algorithms",
    "subtopic": "Asymptotic worst case time and space complexity",
    "theoretical_practical": "practical",
    "marks": 2,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.32",
    "question_text": "Consider the following languages.\nL₁ = {0ᵖ1q0ʳ | p,q,r ≥ 0}\nL₂ = {0ᵖ1q0ʳ | p,q,r ≥ 0, p≠r}\nWhich one of the following statements is FALSE?",
    "options": [
      "(A) L₂ is context-free.",
      "(B) L₁ ∩ L₂ is context-free.",
      "(C) Complement of L₂ is recursive.",
      "(D) Complement of L₁ is context-free but not regular."
    ],
    "subject": "Theory of Computation",
    "chapter": "Theory of Computation",
    "subtopic": "Context-free languages, pumping lemma",
    "theoretical_practical": "theoretical",
    "marks": 2,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.33",
    "question_text": "Consider the DFA A given below.\n(Image of a 3-state DFA)\nWhich of the following are FALSE?\n1. Complement of L(A) is context-free.\n2. L(A) = L((11*0+0)(0 + 1)*0*1*)\n3. For the language accepted by A, A is the minimal DFA.\n4. A accepts all strings over {0, 1} of length at least 2.",
    "options": [
      "(A) 1 and 3 only",
      "(B) 2 and 4 only",
      "(C) 2 and 3 only",
      "(D) 3 and 4 only"
    ],
    "subject": "Theory of Computation",
    "chapter": "Theory of Computation",
    "subtopic": "Regular expressions and finite automata",
    "theoretical_practical": "practical",
    "marks": 2,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.34",
    "question_text": "A shared variable x, initialized to zero, is operated on by four concurrent processes W, X, Y, Z as follows. Each of the processes W and X reads x from memory, increments by one, stores it to memory, and then terminates. Each of the processes Y and Z reads x from memory, decrements by two, stores it to memory, and then terminates. Each process before reading x invokes the P operation (i.e., wait) on a counting semaphore S and invokes the V operation (i.e., signal) on the semaphore S after storing x to memory. Semaphore S is initialized to two. What is the maximum possible value of x after all processes complete execution?",
    "options": [
      "(A) -2",
      "(B) -1",
      "(C) 1",
      "(D) 2"
    ],
    "subject": "Operating System",
    "chapter": "Operating System",
    "subtopic": "inter-process communication, concurrency and synchronization",
    "theoretical_practical": "practical",
    "marks": 2,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.35",
    "question_text": "Consider the following relational schema.\nStudents(rollno: integer, sname: string)\nCourses(courseno: integer, cname: string)\nRegistration(rollno: integer, courseno: integer, percent: real)\nWhich of the following queries are equivalent to this query in English?\n\"Find the distinct names of all students who score more than 90% in the course numbered 107\"\n(I) SELECT DISTINCT S.sname FROM Students as S, Registration as R WHERE R.rollno=S.rollno AND R.courseno=107 AND R.percent >90\n(II) Πsname(σcourseno=107 ∧ percent>90 (Registration ⨝ Students))\n(III) {T | ∃S∈ Students, ∃R∈ Registration (S.rollno=R.rollno ∧ R.courseno=107 ∧ R.percent>90 ∧ T.sname=S.sname)}\n(IV) {<SN> | ∃SR∃RP (<SR, SN>∈ Students ∧ <SR, 107, RP>∈ Registration ∧ RP>90)}",
    "options": [
      "(A) I, II, III and IV",
      "(B) I, II and III only",
      "(C) I, II and IV only",
      "(D) II, III and IV only"
    ],
    "subject": "Databases",
    "chapter": "Databases",
    "subtopic": "Relational model: relational algebra, tuple calculus, SQL",
    "theoretical_practical": "theoretical",
    "marks": 2,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.36",
    "question_text": "Determine the maximum length of the cable (in km) for transmitting data at a rate of 500 Mbps in an Ethernet LAN with frames of size 10,000 bits. Assume the signal speed in the cable to be 2,00,000 km/s.",
    "options": [
      "(A) 1",
      "(B) 2",
      "(C) 2.5",
      "(D) 5"
    ],
    "subject": "Computer Networks",
    "chapter": "Computer Networks",
    "subtopic": "Data link layer: framing, error detection, Medium Access Control, Ethernet bridging",
    "theoretical_practical": "practical",
    "marks": 2,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.37",
    "question_text": "In an IPv4 datagram, the M bit is 0, the value of HLEN is 10, the value of total length is 400 and the fragment offset value is 300. The position of the datagram, the sequence numbers of the first and the last bytes of the payload, respectively are",
    "options": [
      "(A) Last fragment, 2400 and 2789",
      "(B) First fragment, 2400 and 2759",
      "(C) Last fragment, 2400 and 2759",
      "(D) Middle fragment, 300 and 689"
    ],
    "subject": "Computer Networks",
    "chapter": "Computer Networks",
    "subtopic": "Fragmentation and IP addressing, IPv4, CIDR notation",
    "theoretical_practical": "practical",
    "marks": 2,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.39",
    "question_text": "A certain computation generates two arrays a and b such that a[i]=f(i) for 0 ≤ i < n and b[i] = g(a[i]) for 0 ≤ i < n. Suppose this computation is decomposed into two concurrent processes X and Y such that X computes the array a and Y computes the array b. The processes employ two binary semaphores R and S, both initialized to zero. The array a is shared by the two processes. The structures of the processes are shown below.\n\nProcess X:\nprivate i;\nfor (i=0; i<n; i++) {\n  a[i] = f(i);\n  ExitX(R, S);\n}\n\nProcess Y:\nprivate i;\nfor (i=0; i<n; i++) {\n  EntryY(R, S);\n  b[i] = g(a[i]);\n}\n\nWhich one of the following represents the CORRECT implementations of ExitX and EntryY?",
    "options": [
      "(A) ExitX(R, S) { P(R); V(S); } EntryY(R, S) { P(S); V(R); }",
      "(B) ExitX(R, S) { V(R); V(S); } EntryY(R, S) { P(R); P(S); }",
      "(C) ExitX(R, S) { P(S); V(R); } EntryY(R, S) { V(S); P(R); }",
      "(D) ExitX(R, S) { V(R); P(S); } EntryY(R, S) { V(S); P(R); }"
    ],
    "subject": "Operating System",
    "chapter": "Operating System",
    "subtopic": "inter-process communication, concurrency and synchronization",
    "theoretical_practical": "practical",
    "marks": 2,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.40",
    "question_text": "Consider the following two sets of LR(1) items of an LR(1) grammar.\n\nSet 1:\nX → c.X, c/d\nX → .cX, c/d\nX → .d, c/d\n\nSet 2:\nX → c.X, $\nX → .cX, $\nX → .d, $\n\nWhich of the following statements related to merging of the two sets in the corresponding LALR parser is/are FALSE?\n1. Cannot be merged since look aheads are different.\n2. Can be merged but will result in S-R conflict.\n3. Can be merged but will result in R-R conflict.\n4. Cannot be merged since goto on c will lead to two different sets.",
    "options": [
      "(A) 1 only",
      "(B) 2 only",
      "(C) 1 and 4 only",
      "(D) 1, 2, 3 and 4"
    ],
    "subject": "Compiler Design",
    "chapter": "Compiler Design",
    "subtopic": "parsing",
    "theoretical_practical": "theoretical",
    "marks": 2,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.41",
    "question_text": "Which of the following is/are undecidable?\n1. G is a CFG. Is L(G) = Φ?\n2. G is a CFG. Is L(G) = Σ*?\n3. M is a Turing machine. Is L(M) regular?\n4. A is a DFA and N is an NFA. Is L(A) = L(N)?",
    "options": [
      "(A) 3 only",
      "(B) 3 and 4 only",
      "(C) 1, 2 and 3 only",
      "(D) 2 and 3 only"
    ],
    "subject": "Theory of Computation",
    "chapter": "Theory of Computation",
    "subtopic": "Turing machines and undecidability",
    "theoretical_practical": "theoretical",
    "marks": 2,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.42",
    "question_text": "What is the return value of f(p,p), if the value of p is initialized to 5 before the call? Note that the first parameter is passed by reference, whereas the second parameter is passed by value.\n\nint f (int &x, int c) {\n  c = c - 1;\n  if (c==0) return 1;\n  x = x + 1;\n  return f(x,c) * x;\n}",
    "options": [
      "(A) 3024",
      "(B) 6561",
      "(C) 55440",
      "(D) 161051"
    ],
    "subject": "Programming and Data Structures",
    "chapter": "Programming and Data Structures",
    "subtopic": "Recursion",
    "theoretical_practical": "practical",
    "marks": 2,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.43",
    "question_text": "The preorder traversal sequence of a binary search tree is 30, 20, 10, 15, 25, 23, 39, 35, 42. Which one of the following is the postorder traversal sequence of the same tree?",
    "options": [
      "(A) 10, 20, 15, 23, 25, 35, 42, 39, 30",
      "(B) 15, 10, 25, 23, 20, 42, 35, 39, 30",
      "(C) 15, 20, 10, 23, 25, 42, 35, 39, 30",
      "(D) 15, 10, 23, 25, 20, 35, 42, 39, 30"
    ],
    "subject": "Programming and Data Structures",
    "chapter": "Programming and Data Structures",
    "subtopic": "trees, binary search trees, binary heaps, graphs",
    "theoretical_practical": "practical",
    "marks": 2,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.44",
    "question_text": "Consider the following operation along with Enqueue and Dequeue operations on queues, where k is a global parameter.\n\nMultiDequeue (Q) {\n  m = k\n  while (Q is not empty) and (m > 0) {\n    Dequeue (Q)\n    m = m - 1\n  }\n}\n\nWhat is the worst case time complexity of a sequence of n queue operations on an initially empty queue?",
    "options": [
      "(A) Θ(n)",
      "(B) Θ(n + k)",
      "(C) Θ(nk)",
      "(D) Θ(n²)"
    ],
    "subject": "Algorithms",
    "chapter": "Algorithms",
    "subtopic": "Asymptotic worst case time and space complexity",
    "theoretical_practical": "theoretical",
    "marks": 2,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.45",
    "question_text": "Consider an instruction pipeline with five stages without any branch prediction: Fetch Instruction (FI), Decode Instruction (DI), Fetch Operand (FO), Execute Instruction (EI) and Write Operand (WO). The stage delays for FI, DI, FO, EI and WO are 5 ns, 7 ns, 10 ns, 8 ns and 6 ns, respectively. There are intermediate storage buffers after each stage and the delay of each buffer is 1 ns. A program consisting of 12 instructions I₁, I₂, I₃, ..., I₁₂ is executed in this pipelined processor. Instruction I₄ is the only branch instruction and its branch target is I₉. If the branch is taken during the execution of this program, the time (in ns) needed to complete the program is",
    "options": [
      "(A) 132",
      "(B) 165",
      "(C) 176",
      "(D) 328"
    ],
    "subject": "Computer Organization and Architecture",
    "chapter": "Computer Organization and Architecture",
    "subtopic": "Instruction pipelining, pipeline hazards",
    "theoretical_practical": "practical",
    "marks": 2,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.46",
    "question_text": "A RAM chip has a capacity of 1024 words of 8 bits each (1K × 8). The number of 2 × 4 decoders with enable line needed to construct a 16K × 16 RAM from 1K × 8 RAM is",
    "options": [
      "(A) 4",
      "(B) 5",
      "(C) 6",
      "(D) 7"
    ],
    "subject": "Digital Logic",
    "chapter": "Digital Logic",
    "subtopic": "Combinational and sequential circuits",
    "theoretical_practical": "practical",
    "marks": 2,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.47",
    "question_text": "Which one of the following is NOT logically equivalent to ¬∃x(∀y(α) ∧ ∀z(β))?",
    "options": [
      "(A) ∀x(∃z(¬β) → ∀y(α))",
      "(B) ∀x(∀z(β) → ∃y(¬α))",
      "(C) ∀x(∀y(α) → ∃z(¬β))",
      "(D) ∀x(∃y(¬α) → ∃z(¬β))"
    ],
    "subject": "Engineering Mathematics",
    "chapter": "Discrete Mathematics",
    "subtopic": "Propositional and first order logic",
    "theoretical_practical": "theoretical",
    "marks": 2,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.48",
    "question_text": "Common Data for Questions 48 and 49:\nThe following code segment is executed on a processor which allows only register operands in its instructions. Each instruction can have atmost two source operands and one destination operand. Assume that all variables are dead after this code segment.\nc = a + b;\nd = c * a;\ne = c + a;\nx = c * c;\nif (x > a) {\n  y = a * a;\n} else {\n  d = d * d;\n  e = e * e;\n}\nSuppose the instruction set architecture of the processor has only two registers. The only allowed compiler optimization is code motion, which moves statements from one place to another while preserving correctness. What is the minimum number of spills to memory in the compiled code?",
    "options": [
      "(A) 0",
      "(B) 1",
      "(C) 2",
      "(D) 3"
    ],
    "subject": "Compiler Design",
    "chapter": "Compiler Design",
    "subtopic": "Local optimization",
    "theoretical_practical": "practical",
    "marks": 2,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.49",
    "question_text": "Common Data for Questions 48 and 49:\nThe following code segment is executed on a processor which allows only register operands in its instructions. Each instruction can have atmost two source operands and one destination operand. Assume that all variables are dead after this code segment.\nc = a + b;\nd = c * a;\ne = c + a;\nx = c * c;\nif (x > a) {\n  y = a * a;\n} else {\n  d = d * d;\n  e = e * e;\n}\nWhat is the minimum number of registers needed in the instruction set architecture of the processor to compile this code segment without any spill to memory? Do not apply any optimization other than optimizing register allocation.",
    "options": [
      "(A) 3",
      "(B) 4",
      "(C) 5",
      "(D) 6"
    ],
    "subject": "Compiler Design",
    "chapter": "Compiler Design",
    "subtopic": "Intermediate code generation",
    "theoretical_practical": "practical",
    "marks": 2,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 0.8
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.50",
    "question_text": "Common Data for Questions 50 and 51:\nThe procedure given below is required to find and replace certain characters inside an input character string supplied in array A. The characters to be replaced are supplied in array oldc, while their respective replacement characters are supplied in array newc. Array A has a fixed length of five characters, while arrays oldc and newc contain three characters each. However, the procedure is flawed.\n\nvoid find_and_replace (char *A, char *oldc, char *newc) {\n  for (int i=0; i<5; i++)\n    for (int j=0; j<3; j++)\n      if (A[i] == oldc[j]) A[i] = newc[j];\n}\n\nThe procedure is tested with the following four test cases.\n(1) oldc = \"abc\", newc = \"dab\"\n(2) oldc = \"cde\", newc = \"bcd\"\n(3) oldc = \"bca\", newc = \"cda\"\n(4) oldc = \"abc\", newc = \"bac\"\n\nThe tester now tests the program on all input strings of length five consisting of characters 'a', 'b', 'c', 'd' and 'e' with duplicates allowed. If the tester carries out this testing with the four test cases given above, how many test cases will be able to capture the flaw?",
    "options": [
      "(A) Only one",
      "(B) Only two",
      "(C) Only three",
      "(D) All four"
    ],
    "subject": "Programming and Data Structures",
    "chapter": "Programming and Data Structures",
    "subtopic": "Programming in C",
    "theoretical_practical": "practical",
    "marks": 2,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.51",
    "question_text": "Common Data for Questions 50 and 51:\nThe procedure given below is required to find and replace certain characters inside an input character string supplied in array A. The characters to be replaced are supplied in array oldc, while their respective replacement characters are supplied in array newc. Array A has a fixed length of five characters, while arrays oldc and newc contain three characters each. However, the procedure is flawed.\n\nvoid find_and_replace (char *A, char *oldc, char *newc) {\n  for (int i=0; i<5; i++)\n    for (int j=0; j<3; j++)\n      if (A[i] == oldc[j]) A[i] = newc[j];\n}\n\nThe procedure is tested with the following four test cases.\n(1) oldc = \"abc\", newc = \"dab\"\n(2) oldc = \"cde\", newc = \"bcd\"\n(3) oldc = \"bca\", newc = \"cda\"\n(4) oldc = \"abc\", newc = \"bac\"\n\nIf array A is made to hold the string \"abcde\", which of the above four test cases will be successful in exposing the flaw in this procedure?",
    "options": [
      "(A) None",
      "(B) 2 only",
      "(C) 3 and 4 only",
      "(D) 4 only"
    ],
    "subject": "Programming and Data Structures",
    "chapter": "Programming and Data Structures",
    "subtopic": "Programming in C",
    "theoretical_practical": "practical",
    "marks": 2,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.52",
    "question_text": "Statement for Linked Answer Questions 52 and 53:\nA computer uses 46-bit virtual address, 32-bit physical address, and a three-level paged page table organization. The page table base register stores the base address of the first-level table (T₁), which occupies exactly one page. Each entry of T₁ stores the base address of a page of the second-level table (T₂). Each entry of T₂ stores the base address of a page of the third-level table (T₃). Each entry of T₃ stores a page table entry (PTE). The PTE is 32 bits in size. The processor used in the computer has a 1 MB 16-way set associative virtually indexed physically tagged cache. The cache block size is 64 bytes.\n\nWhat is the size of a page in KB in this computer?",
    "options": [
      "(A) 2",
      "(B) 4",
      "(C) 8",
      "(D) 16"
    ],
    "subject": "Operating System",
    "chapter": "Operating System",
    "subtopic": "Memory management and virtual memory",
    "theoretical_practical": "practical",
    "marks": 2,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.53",
    "question_text": "Statement for Linked Answer Questions 52 and 53:\nA computer uses 46-bit virtual address, 32-bit physical address, and a three-level paged page table organization. The page table base register stores the base address of the first-level table (T₁), which occupies exactly one page. Each entry of T₁ stores the base address of a page of the second-level table (T₂). Each entry of T₂ stores the base address of a page of the third-level table (T₃). Each entry of T₃ stores a page table entry (PTE). The PTE is 32 bits in size. The processor used in the computer has a 1 MB 16-way set associative virtually indexed physically tagged cache. The cache block size is 64 bytes.\n\nWhat is the minimum number of page colours needed to guarantee that no two synonyms map to different sets in the processor cache of this computer?",
    "options": [
      "(A) 2",
      "(B) 4",
      "(C) 8",
      "(D) 16"
    ],
    "subject": "Computer Organization and Architecture",
    "chapter": "Computer Organization and Architecture",
    "subtopic": "Memory hierarchy: cache, main memory and secondary storage",
    "theoretical_practical": "practical",
    "marks": 2,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.54",
    "question_text": "Statement for Linked Answer Questions 54 and 55:\nRelation R has eight attributes ABCDEFGH. Fields of R contain only atomic values. F={CH→G, A→BC, B→CFH, E→A, F→EG} is a set of functional dependencies (FDs) so that F⁺ is exactly the set of FDs that hold for R.\n\nHow many candidate keys does the relation R have?",
    "options": [
      "(A) 3",
      "(B) 4",
      "(C) 5",
      "(D) 6"
    ],
    "subject": "Databases",
    "chapter": "Databases",
    "subtopic": "normal forms",
    "theoretical_practical": "practical",
    "marks": 2,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.55",
    "question_text": "Statement for Linked Answer Questions 54 and 55:\nRelation R has eight attributes ABCDEFGH. Fields of R contain only atomic values. F={CH→G, A→BC, B→CFH, E→A, F→EG} is a set of functional dependencies (FDs) so that F⁺ is exactly the set of FDs that hold for R.\n\nThe relation R is",
    "options": [
      "(A) in 1NF, but not in 2NF.",
      "(B) in 2NF, but not in 3NF.",
      "(C) in 3NF, but not in BCNF.",
      "(D) in BCNF."
    ],
    "subject": "Databases",
    "chapter": "Databases",
    "subtopic": "normal forms",
    "theoretical_practical": "practical",
    "marks": 2,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.56",
    "question_text": "Which one of the following options is the closest in meaning to the word given below?\nNadir",
    "options": [
      "(A) Highest",
      "(B) Lowest",
      "(C) Medium",
      "(D) Integration"
    ],
    "subject": "General Aptitude",
    "chapter": "Verbal Ability",
    "subtopic": "Vocabulary",
    "theoretical_practical": "theoretical",
    "marks": 1,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.57",
    "question_text": "Complete the sentence:\nUniversalism is to particularism as diffuseness is to __________.",
    "options": [
      "(A) specificity",
      "(B) neutrality",
      "(C) generality",
      "(D) adaptation"
    ],
    "subject": "General Aptitude",
    "chapter": "Verbal Ability",
    "subtopic": "Analogy",
    "theoretical_practical": "theoretical",
    "marks": 1,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.58",
    "question_text": "What will be the maximum sum of 44, 42, 40, ...... ?",
    "options": [
      "(A) 502",
      "(B) 504",
      "(C) 506",
      "(D) 500"
    ],
    "subject": "General Aptitude",
    "chapter": "Quantitative Aptitude",
    "subtopic": "Sequences and Series",
    "theoretical_practical": "practical",
    "marks": 1,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.59",
    "question_text": "Were you a bird, you __________ in the sky.",
    "options": [
      "(A) would fly",
      "(B) shall fly",
      "(C) should fly",
      "(D) shall have flown"
    ],
    "subject": "General Aptitude",
    "chapter": "Verbal Ability",
    "subtopic": "Grammar",
    "theoretical_practical": "theoretical",
    "marks": 1,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.60",
    "question_text": "Choose the grammatically INCORRECT sentence:",
    "options": [
      "(A) He is of Asian origin.",
      "(B) They belonged to Africa.",
      "(C) She is an European.",
      "(D) They migrated from India to Australia."
    ],
    "subject": "General Aptitude",
    "chapter": "Verbal Ability",
    "subtopic": "Grammar",
    "theoretical_practical": "theoretical",
    "marks": 1,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.61",
    "question_text": "Find the sum of the expression\n1/(√1+√2) + 1/(√2+√3) + 1/(√3+√4) + .......... + 1/(√80+√81)",
    "options": [
      "(A) 7",
      "(B) 8",
      "(C) 9",
      "(D) 10"
    ],
    "subject": "General Aptitude",
    "chapter": "Quantitative Aptitude",
    "subtopic": "Sequences and Series",
    "theoretical_practical": "practical",
    "marks": 2,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.62",
    "question_text": "Out of all the 2-digit integers between 1 and 100, a 2-digit number has to be selected at random. What is the probability that the selected number is not divisible by 7?",
    "options": [
      "(A) 13/90",
      "(B) 12/90",
      "(C) 78/90",
      "(D) 77/90"
    ],
    "subject": "General Aptitude",
    "chapter": "Quantitative Aptitude",
    "subtopic": "Probability",
    "theoretical_practical": "practical",
    "marks": 2,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.63",
    "question_text": "After several defeats in wars, Robert Bruce went in exile and wanted to commit suicide. Just before committing suicide, he came across a spider attempting tirelessly to have its net. Time and again, the spider failed but that did not deter it to refrain from making attempts. Such attempts by the spider made Bruce curious. Thus, Bruce started observing the near-impossible goal of the spider to have the net. Ultimately, the spider succeeded in having its net despite several failures. Such act of the spider encouraged Bruce not to commit suicide. And then, Bruce went back again and won many a battle, and the rest is history.\nWhich one of the following assertions is best supported by the above information?",
    "options": [
      "(A) Failure is the pillar of success.",
      "(B) Honesty is the best policy.",
      "(C) Life begins and ends with adventures.",
      "(D) No adversity justifies giving up hope."
    ],
    "subject": "General Aptitude",
    "chapter": "Verbal Ability",
    "subtopic": "Reading Comprehension",
    "theoretical_practical": "theoretical",
    "marks": 2,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.64",
    "question_text": "A tourist covers half of his journey by train at 60 km/h, half of the remainder by bus at 30 km/h and the rest by cycle at 10 km/h. The average speed of the tourist in km/h during his entire journey is",
    "options": [
      "(A) 36",
      "(B) 30",
      "(C) 24",
      "(D) 18"
    ],
    "subject": "General Aptitude",
    "chapter": "Quantitative Aptitude",
    "subtopic": "Speed, Time and Distance",
    "theoretical_practical": "practical",
    "marks": 2,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  },
  {
    "year": 2013,
    "paper_code": "CS",
    "question_no": "Q.65",
    "question_text": "The current erection cost of a structure is Rs. 13,200. If the labour wages per day increase by 1/5 of the current wages and the working hours decrease by 1/24 of the current period, then the new cost of erection in Rs. is",
    "options": [
      "(A) 16,500",
      "(B) 15,180",
      "(C) 11,000",
      "(D) 10,120"
    ],
    "subject": "General Aptitude",
    "chapter": "Quantitative Aptitude",
    "subtopic": "Percentages",
    "theoretical_practical": "practical",
    "marks": 2,
    "provenance": "GATE 2013 CS Paper A",
    "confidence": 1.0
  }
]