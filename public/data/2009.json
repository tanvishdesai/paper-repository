[
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.1",
      "question_text": "Which one of the following is NOT necessarily a property of a Group ?",
      "options": [
        "(A) Commutativity",
        "(B) Associativity",
        "(C) Existence of inverse for every element",
        "(D) Existence of identity"
      ],
      "subject": "Engineering Mathematics",
      "chapter": "Discrete Mathematics",
      "subtopic": "Monoids, Groups",
      "theoretical_practical": "theoretical",
      "marks": 1,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 1.0
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.2",
      "question_text": "What is the chromatic number of an n-vertex simple connected graph which does not contain any odd length cycle? Assume n ≥ 2.",
      "options": [
        "(A) 2",
        "(B) 3",
        "(C) n-1",
        "(D) n"
      ],
      "subject": "Engineering Mathematics",
      "chapter": "Discrete Mathematics",
      "subtopic": "Graphs: connectivity, matching, colouring",
      "theoretical_practical": "theoretical",
      "marks": 1,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 1.0
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.3",
      "question_text": "Which one of the following is TRUE for any simple connected undirected graph with more than 2 vertices ?",
      "options": [
        "(A) No two vertices have the same degree.",
        "(B) At least two vertices have the same degree.",
        "(C) At least three vertices have the same degree.",
        "(D) All vertices have the same degree."
      ],
      "subject": "Engineering Mathematics",
      "chapter": "Discrete Mathematics",
      "subtopic": "Graphs: connectivity, matching, colouring",
      "theoretical_practical": "theoretical",
      "marks": 1,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 1.0
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.4",
      "question_text": "Consider the binary relation R = {(x, y), (x, z), (z, x), (z, y)} on the set {x, y, z}. Which one of the following is TRUE ?",
      "options": [
        "(A) R is symmetric but NOT antisymmetric.",
        "(B) R is NOT symmetric but antisymmetric.",
        "(C) R is both symmetric and antisymmetric.",
        "(D) R is neither symmetric nor antisymmetric."
      ],
      "subject": "Engineering Mathematics",
      "chapter": "Discrete Mathematics",
      "subtopic": "Sets, relations, functions, partial orders and lattices",
      "theoretical_practical": "practical",
      "marks": 1,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 1.0
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.5",
      "question_text": "(1217)₈ is equivalent to",
      "options": [
        "(A) (1217)₁₆",
        "(B) (028F)₁₆",
        "(C) (2297)₁₀",
        "(D) (0B17)₁₆"
      ],
      "subject": "Digital Logic",
      "chapter": "Number representations and computer arithmetic (fixed and floating point)",
      "subtopic": "Number representations and computer arithmetic (fixed and floating point)",
      "theoretical_practical": "practical",
      "marks": 1,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 1.0
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.6",
      "question_text": "What is the minimum number of gates required to implement the Boolean function (AB + C) if we have to use only 2-input NOR gates ?",
      "options": [
        "(A) 2",
        "(B) 3",
        "(C) 4",
        "(D) 5"
      ],
      "subject": "Digital Logic",
      "chapter": "Boolean algebra",
      "subtopic": "Boolean algebra",
      "theoretical_practical": "practical",
      "marks": 1,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 1.0
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.7",
      "question_text": "How many 32K × 1 RAM chips are needed to provide a memory capacity of 256 K-bytes ?",
      "options": [
        "(A) 8",
        "(B) 32",
        "(C) 64",
        "(D) 128"
      ],
      "subject": "Computer Organization and Architecture",
      "chapter": "Memory hierarchy: cache, main memory and secondary storage; I/O interface (interrupt and DMA mode)",
      "subtopic": "Memory hierarchy: cache, main memory and secondary storage",
      "theoretical_practical": "practical",
      "marks": 1,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 1.0
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.8",
      "question_text": "A CPU generally handles an interrupt by executing an interrupt service routine",
      "options": [
        "(A) as soon as an interrupt is raised.",
        "(B) by checking the interrupt register at the end of fetch cycle.",
        "(C) by checking the interrupt register after finishing the execution of the current instruction.",
        "(D) by checking the interrupt register at fixed time intervals."
      ],
      "subject": "Computer Organization and Architecture",
      "chapter": "Memory hierarchy: cache, main memory and secondary storage; I/O interface (interrupt and DMA mode)",
      "subtopic": "I/O interface (interrupt and DMA mode)",
      "theoretical_practical": "theoretical",
      "marks": 1,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 1.0
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.9",
      "question_text": "In which one of the following page replacement policies, Belady's anomaly may occur?",
      "options": [
        "(A) FIFO",
        "(B) Optimal",
        "(C) LRU",
        "(D) MRU"
      ],
      "subject": "Operating System",
      "chapter": "Memory management and virtual memory",
      "subtopic": "Memory management and virtual memory",
      "theoretical_practical": "theoretical",
      "marks": 1,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 1.0
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.10",
      "question_text": "The essential content(s) in each entry of a page table is/are",
      "options": [
        "(A) virtual page number.",
        "(B) page frame number.",
        "(C) both virtual page number and page frame number.",
        "(D) access right information."
      ],
      "subject": "Operating System",
      "chapter": "Memory management and virtual memory",
      "subtopic": "Memory management and virtual memory",
      "theoretical_practical": "theoretical",
      "marks": 1,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 1.0
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.11",
      "question_text": "What is the number of swaps required to sort n elements using selection sort, in the worst case ?",
      "options": [
        "(A) Θ(n)",
        "(B) Θ(n log n)",
        "(C) Θ(n²)",
        "(D) Θ(n² log n)"
      ],
      "subject": "Algorithms",
      "chapter": "Searching, sorting, hashing",
      "subtopic": "Searching, sorting, hashing",
      "theoretical_practical": "theoretical",
      "marks": 1,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 1.0
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.12",
      "question_text": "S → aSa | bSb | a | b\nThe language generated by the above grammar over the alphabet {a, b} is the set of",
      "options": [
        "(A) all palindromes.",
        "(B) all odd length palindromes.",
        "(C) strings that begin and end with the same symbol.",
        "(D) all even length palindromes."
      ],
      "subject": "Theory of Computation",
      "chapter": "Context-free grammars and push-down automata",
      "subtopic": "Context-free grammars and push-down automata",
      "theoretical_practical": "practical",
      "marks": 1,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 1.0
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.13",
      "question_text": "Which of the following statement(s) is/are correct regarding Bellman-Ford shortest path algorithm ?\nP. Always finds a negative weighted cycle, if one exists.\nQ. Finds whether any negative weighted cycle is reachable from the source.",
      "options": [
        "(A) P only",
        "(B) Q only",
        "(C) both P and Q",
        "(D) neither P nor Q"
      ],
      "subject": "Algorithms",
      "chapter": "Graph traversals, minimum spanning trees, shortest paths",
      "subtopic": "shortest paths",
      "theoretical_practical": "theoretical",
      "marks": 1,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 1.0
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.14",
      "question_text": "Let πᴀ be a problem that belongs to the class NP. Then which one of the following is TRUE ?",
      "options": [
        "(A) There is no polynomial time algorithm for πᴀ.",
        "(B) If πᴀ can be solved deterministically in polynomial time, then P = NP.",
        "(C) If πᴀ is NP-hard, then it is NP-complete.",
        "(D) πᴀ may be undecidable."
      ],
      "subject": "Theory of Computation",
      "chapter": "Turing machines and undecidability",
      "subtopic": "Turing machines and undecidability",
      "theoretical_practical": "theoretical",
      "marks": 1,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 1.0
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.15",
      "question_text": "Which one of the following languages over the alphabet {0, 1} is described by the regular expression: (0 + 1)*0(0 + 1)*0(0 + 1)* ?",
      "options": [
        "(A) The set of all strings containing the substring 00.",
        "(B) The set of all strings containing at most two 0's.",
        "(C) The set of all strings containing at least two 0's.",
        "(D) The set of all strings that begin and end with either 0 or 1."
      ],
      "subject": "Theory of Computation",
      "chapter": "Regular expressions and finite automata",
      "subtopic": "Regular expressions and finite automata",
      "theoretical_practical": "practical",
      "marks": 1,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 1.0
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.16",
      "question_text": "Which one of the following is FALSE ?",
      "options": [
        "(A) There is a unique minimal DFA for every regular language.",
        "(B) Every NFA can be converted to an equivalent PDA.",
        "(C) Complement of every context-free language is recursive.",
        "(D) Every nondeterministic PDA can be converted to an equivalent deterministic PDA."
      ],
      "subject": "Theory of Computation",
      "chapter": "Regular and context-free languages, pumping lemma",
      "subtopic": "Regular and context-free languages, pumping lemma",
      "theoretical_practical": "theoretical",
      "marks": 1,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 1.0
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.17",
      "question_text": "Match all items in Group 1 with correct options from those given in Group 2.\nGroup 1\nP. Regular expression\nQ. Pushdown automata\nR. Dataflow analysis\nS. Register allocation\nGroup 2\n1. Syntax analysis\n2. Code generation\n3. Lexical analysis\n4. Code Optimization",
      "options": [
        "(A) P – 4, Q – 1, R – 2, S – 3",
        "(B) P – 3, Q – 1, R – 4, S – 2",
        "(C) P – 3, Q – 4, R – 1, S – 2",
        "(D) P – 2, Q – 1, R – 4, S – 3"
      ],
      "subject": "Compiler Design",
      "chapter": "Lexical analysis, parsing, syntax-directed translation",
      "subtopic": "Lexical analysis, parsing, syntax-directed translation",
      "theoretical_practical": "theoretical",
      "marks": 1,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 0.8
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.18",
      "question_text": "Consider the program below:\n#include <stdio.h>\nint fun(int n, int *f_p) {\n    int t, f;\n    if (n <= 1) {\n        *f_p = 1;\n        return 1;\n    }\n    t = fun (n-1, f_p);\n    f = t + *f_p;\n    *f_p = t;\n    return f;\n}\nint main() {\n    int x = 15;\n    printf (\"%d\\n\", fun(5, &x));\n    return 0;\n}\nThe value printed is :",
      "options": [
        "(A) 6",
        "(B) 8",
        "(C) 14",
        "(D) 15"
      ],
      "subject": "Programming and Data Structures",
      "chapter": "Programming in C",
      "subtopic": "Recursion",
      "theoretical_practical": "practical",
      "marks": 1,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 1.0
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.19",
      "question_text": "The coupling between different modules of a software is categorized as follows:\nI. Content coupling\nII. Common coupling\nIII. Control coupling\nIV. Stamp coupling\nV. Data coupling\nCoupling between modules can be ranked in the order of strongest (least desirable) to weakest (most desirable) as follows :",
      "options": [
        "(A) I – II – III – IV – V",
        "(B) V – IV – III – II – I",
        "(C) I – III – V – II – IV",
        "(D) IV – II – V – III – I"
      ],
      "subject": "Algorithms",
      "chapter": "Algorithm design techniques: greedy, dynamic programming and divide-and-conquer",
      "subtopic": "OTHER: Software Engineering - Coupling",
      "theoretical_practical": "theoretical",
      "marks": 1,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 0.2
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.20",
      "question_text": "Consider the HTML table definition given below :\n<table border=1>\n  <tr> <td rowspan=2> ab </td>\n    <td colspan=2> cd </td>\n  </tr>\n  <tr> <td> ef </td>\n    <td rowspan=2> gh </td>\n  </tr>\n  <tr> <td colspan=2> ik </td>\n  </tr>\n</table>\nThe number of rows in each column and the number of columns in each row are :",
      "options": [
        "(A) (2,2,3) and (2,3,2)",
        "(B) (2,2,3) and (2,2,3)",
        "(C) (2,3,2) and (2,3,2)",
        "(D) (2,3,2) and (2,2,3)"
      ],
      "subject": "Computer Networks",
      "chapter": "Application layer protocols: DNS, SMTP, HTTP, FTP, Email",
      "subtopic": "OTHER: HTML structure",
      "theoretical_practical": "practical",
      "marks": 1,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 0.2
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.21",
      "question_text": "An unbalanced dice (with 6 faces, numbered from 1 to 6) is thrown. The probability that the face value is odd is 90% of the probability that the face value is even. The probability of getting any even numbered face is the same.\nIf the probability that the face is even given that it is greater than 3 is 0.75, which one of the following options is closest to the probability that the face value exceeds 3 ?",
      "options": [
        "(A) 0.453",
        "(B) 0.468",
        "(C) 0.485",
        "(D) 0.492"
      ],
      "subject": "Engineering Mathematics",
      "chapter": "Probability and Statistics",
      "subtopic": "Conditional probability and Bayes theorem",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 1.0
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.22",
      "question_text": "For the composition table of a cyclic group shown below\n* a b c d\na a b c d\nb b a d c\nc c d b a\nd d c a b\nWhich one of the following choices is correct ?",
      "options": [
        "(A) a, b are generators",
        "(B) b, c are generators",
        "(C) c, d are generators",
        "(D) d, a are generators"
      ],
      "subject": "Engineering Mathematics",
      "chapter": "Discrete Mathematics",
      "subtopic": "Monoids, Groups",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 1.0
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.23",
      "question_text": "Which one of the following is the most appropriate logical formula to represent the statement :\n\"Gold and silver ornaments are precious\"\nThe following notations are used :\nG(x): x is a gold ornament.\nS(x): x is a silver ornament.\nP(x): x is precious.",
      "options": [
        "(A) ∀x(P(x) → (G(x) ∧ S(x)))",
        "(B) ∀x((G(x) ∧ S(x)) → P(x))",
        "(C) ∃x((G(x) ∧ S(x)) → P(x))",
        "(D) ∀x((G(x) ∨ S(x)) → P(x))"
      ],
      "subject": "Engineering Mathematics",
      "chapter": "Discrete Mathematics",
      "subtopic": "Propositional and first order logic",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 1.0
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.24",
      "question_text": "The binary operation □ is defined as follows :\nP Q P□Q\nT T T\nT F T\nF T F\nF F T\nWhich one of the following is equivalent to P ∨ Q?",
      "options": [
        "(A) ¬Q □ P",
        "(B) P □ ¬Q",
        "(C) ¬P □ Q",
        "(D) ¬P □ ¬Q"
      ],
      "subject": "Engineering Mathematics",
      "chapter": "Discrete Mathematics",
      "subtopic": "Propositional and first order logic",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 1.0
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.25",
      "question_text": "∫₀^(π/4) (1 − tan x)/(1 + tan x)dx\nevaluates to",
      "options": [
        "(A) 0",
        "(B) 1",
        "(C) ln 2",
        "(D) ½ ln 2"
      ],
      "subject": "Engineering Mathematics",
      "chapter": "Calculus",
      "subtopic": "Integration",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 1.0
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.26",
      "question_text": "Consider the following well-formed formulae :\nI. ¬∀x(P(x))\nII. ∃x(P(x))\nIII. ¬∃x(¬P(x))\nIV. ∃x(¬P(x))\nWhich of the above are equivalent ?",
      "options": [
        "(A) I and III",
        "(B) I and IV",
        "(C) II and III",
        "(D) II and IV"
      ],
      "subject": "Engineering Mathematics",
      "chapter": "Discrete Mathematics",
      "subtopic": "Propositional and first order logic",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 1.0
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.27",
      "question_text": "Given the following state table of an FSM with two states A and B, one input and one output :\nPresent State A | Present State B | Input | Next State A | Next State B | Output\n0 | 0 | 0 | 0 | 0 | 1\n0 | 1 | 0 | 1 | 0 | 0\n1 | 0 | 0 | 0 | 1 | 0\n1 | 1 | 0 | 1 | 0 | 0\n0 | 0 | 1 | 0 | 1 | 0\n0 | 1 | 1 | 0 | 0 | 1\n1 | 0 | 1 | 0 | 1 | 1\n1 | 1 | 1 | 0 | 0 | 1\nIf the initial state is A = 0, B = 0, what is the minimum length of an input string which will take the machine to the state A = 0, B = 1 with Output = 1?",
      "options": [
        "(A) 3",
        "(B) 4",
        "(C) 5",
        "(D) 6"
      ],
      "subject": "Digital Logic",
      "chapter": "Combinational and sequential circuits",
      "subtopic": "Combinational and sequential circuits",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 1.0
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.28",
      "question_text": "Consider a 4 stage pipeline processor. The number of cycles needed by the four instructions I1, I2, I3, I4 in stages S1, S2, S3, S4 is shown below :\n   | S1 | S2 | S3 | S4\nI1 | 2  | 1  | 1  | 1\nI2 | 1  | 3  | 2  | 2\nI3 | 2  | 1  | 1  | 3\nI4 | 1  | 2  | 2  | 2\nWhat is the number of cycles needed to execute the following loop ?\nfor (i = 1 to 2) {I1; I2; I3; I4;}",
      "options": [
        "(A) 16",
        "(B) 23",
        "(C) 28",
        "(D) 30"
      ],
      "subject": "Computer Organization and Architecture",
      "chapter": "Instruction pipelining, pipeline hazards",
      "subtopic": "Instruction pipelining, pipeline hazards",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 1.0
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.29",
      "question_text": "Consider a 4-way set associative cache (initially empty) with total 16 cache blocks. The main memory consists of 256 blocks and the request for memory blocks is in the following order :\n0, 255, 1, 4, 3, 8, 133, 159, 216, 129, 63, 8, 48, 32, 73, 92, 155.\nWhich one of the following memory block will NOT be in cache if LRU replacement policy is used ?",
      "options": [
        "(A) 3",
        "(B) 8",
        "(C) 129",
        "(D) 216"
      ],
      "subject": "Computer Organization and Architecture",
      "chapter": "Memory hierarchy: cache, main memory and secondary storage; I/O interface (interrupt and DMA mode)",
      "subtopic": "Memory hierarchy: cache, main memory and secondary storage",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 1.0
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.30",
      "question_text": "Consider a system with 4 types of resources R1 (3 units), R2 (2 units), R3 (3 units), R4 (2 units). A non-preemptive resource allocation policy is used. At any given instance, a request is not entertained if it cannot be completely satisfied. Three processes P1, P2, P3 request the resources as follows if executed independently.\nProcess P1:\nt = 0: requests 2 units of R2\nt = 1: requests 1 unit of R3\nt = 3: requests 2 units of R1\nt = 5: releases 1 unit of R2 and 1 unit of R1\nt = 7: releases 1 unit of R3\nt = 8: requests 2 units of R4\nt = 10: Finishes\nProcess P2:\nt = 0: requests 2 units of R3\nt = 2: requests 1 unit of R4\nt = 4: requests 1 unit of R1\nt = 6: releases 1 unit of R3\nt = 8: Finishes\nProcess P3:\nt = 0: requests 1 unit of R4\nt = 2: requests 2 units of R1\nt = 5: releases 2 units of R1\nt = 7: requests 1 unit of R2\nt = 8: requests 1 unit of R3\nt = 9: Finishes\nWhich one of the following statements is TRUE if all three processes run concurrently starting at time t=0?",
      "options": [
        "(A) All processes will finish without any deadlock.",
        "(B) Only P1 and P2 will be in deadlock.",
        "(C) Only P1 and P3 will be in deadlock.",
        "(D) All three processes will be in deadlock."
      ],
      "subject": "Operating System",
      "chapter": "Deadlock",
      "subtopic": "Deadlock",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 1.0
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.31",
      "question_text": "Consider a disk system with 100 cylinders. The requests to access the cylinders occur in following sequence :\n4, 34, 10, 7, 19, 73, 2, 15, 6, 20.\nAssuming that the head is currently at cylinder 50, what is the time taken to satisfy all requests if it takes 1 ms to move from one cylinder to adjacent one and shortest seek time first policy is used ?",
      "options": [
        "(A) 95 ms",
        "(B) 119 ms",
        "(C) 233 ms",
        "(D) 276 ms"
      ],
      "subject": "Operating System",
      "chapter": "CPU and I/O scheduling",
      "subtopic": "CPU and I/O scheduling",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 1.0
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.32",
      "question_text": "In the following process state transition diagram for a uniprocessor system, assume that there are always some processes in the ready state :\n[Diagram showing process states: Start -> A -> Ready -> B -> Running -> D -> Terminated, Running -> C -> Blocked, Blocked -> E -> Ready, Running -> F -> Ready]\nNow consider the following statements :\nI. If a process makes a transition D, it would result in another process making transition A immediately.\nII. A process P₂ in blocked state can make transition E while another process P₁ is in running state.\nIII. The OS uses preemptive scheduling.\nIV. The OS uses non-preemptive scheduling.\nWhich of the above statements are TRUE?",
      "options": [
        "(A) I and II",
        "(B) I and III",
        "(C) II and III",
        "(D) II and IV"
      ],
      "subject": "Operating System",
      "chapter": "System calls, processes, threads, inter-process communication, concurrency and synchronization",
      "subtopic": "System calls, processes, threads, inter-process communication, concurrency and synchronization",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 0.9
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.33",
      "question_text": "The enter_CS() and leave_CS() functions to implement critical section of a process are realized using test-and-set instruction as follows :\nvoid enter_CS(X)\n{\n    while (test-and-set(X));\n}\nvoid leave_CS(X)\n{\n    X=0;\n}\nIn the above solution, X is a memory location associated with the CS and is initialized to 0. Now consider the following statements :\nI. The above solution to CS problem is deadlock-free.\nII. The solution is starvation-free.\nIII. The processes enter CS in FIFO order.\nIV. More than one process can enter CS at the same time.\nWhich of the above statements are TRUE ?",
      "options": [
        "(A) I only",
        "(B) I and II",
        "(C) II and III",
        "(D) IV only"
      ],
      "subject": "Operating System",
      "chapter": "System calls, processes, threads, inter-process communication, concurrency and synchronization",
      "subtopic": "concurrency and synchronization",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 1.0
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.34",
      "question_text": "A multilevel page table is preferred in comparison to a single level page table for translating virtual address to physical address because",
      "options": [
        "(A) it reduces the memory access time to read or write a memory location.",
        "(B) it helps to reduce the size of page table needed to implement the virtual address space of a process.",
        "(C) it is required by the translation lookaside buffer.",
        "(D) it helps to reduce the number of page faults in page replacement algorithms."
      ],
      "subject": "Operating System",
      "chapter": "Memory management and virtual memory",
      "subtopic": "Memory management and virtual memory",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 1.0
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.35",
      "question_text": "The running time of an algorithm is represented by the following recurrence relation:\nT(n) = \n  n, if n ≤ 3\n  T(n/3) + cn, otherwise\nWhich one of the following represents the time complexity of the algorithm?",
      "options": [
        "(A) Θ(n)",
        "(B) Θ(n log n)",
        "(C) Θ(n²)",
        "(D) Θ(n² log n)"
      ],
      "subject": "Algorithms",
      "chapter": "Asymptotic worst case time and space complexity",
      "subtopic": "Asymptotic worst case time and space complexity",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 1.0
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.36",
      "question_text": "The keys 12, 18, 13, 2, 3, 23, 5 and 15 are inserted into an initially empty hash table of length 10 using open addressing with hash function h(k) = k mod 10 and linear probing. What is the resultant hash table?",
      "options": [
        "(A) [Image of hash table A]",
        "(B) [Image of hash table B]",
        "(C) [Image of hash table C]",
        "(D) [Image of hash table D]"
      ],
      "subject": "Algorithms",
      "chapter": "Searching, sorting, hashing",
      "subtopic": "hashing",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 1.0
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.37",
      "question_text": "What is the maximum height of any AVL-tree with 7 nodes? Assume that the height of a tree with a single node is 0.",
      "options": [
        "(A) 2",
        "(B) 3",
        "(C) 4",
        "(D) 5"
      ],
      "subject": "Programming and Data Structures",
      "chapter": "Arrays, stacks, queues, linked lists, trees, binary search trees, binary heaps, graphs",
      "subtopic": "trees, binary search trees",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 1.0
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.38",
      "question_text": "Consider the following graph :\n[Image of a graph with vertices a, b, c, d, e, f, g and weighted edges]\nWhich one of the following is NOT the sequence of edges added to the minimum spanning tree using Kruskal's algorithm?",
      "options": [
        "(A) (b, e) (e, f) (a, c) (b, c) (f, g) (c, d)",
        "(B) (b, e) (e, f) (a, c) (f, g) (b, c) (c, d)",
        "(C) (b, e) (a, c) (e, f) (b, c) (f, g) (c, d)",
        "(D) (b, e) (e, f) (b, c) (a, c) (f, g) (c, d)"
      ],
      "subject": "Algorithms",
      "chapter": "Graph traversals, minimum spanning trees, shortest paths",
      "subtopic": "minimum spanning trees",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 1.0
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.39",
      "question_text": "In quick sort, for sorting n elements, the (n/4)th smallest element is selected as pivot using an O(n) time algorithm. What is the worst case time complexity of the quick sort ?",
      "options": [
        "(A) Θ(n)",
        "(B) Θ(n log n)",
        "(C) Θ(n²)",
        "(D) Θ(n² log n)"
      ],
      "subject": "Algorithms",
      "chapter": "Asymptotic worst case time and space complexity",
      "subtopic": "Asymptotic worst case time and space complexity",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 1.0
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.40",
      "question_text": "Let L = L₁ ∩ L₂, where L₁ and L₂ are languages as defined below :\nL₁ = {aᵐbᵐcaⁿbⁿ | m, n ≥ 0}\nL₂ = {aⁱbʲcᵏ | i, j, k ≥ 0}\nThen L is",
      "options": [
        "(A) not recursive.",
        "(B) regular.",
        "(C) context-free but not regular.",
        "(D) recursively enumerable but not context-free."
      ],
      "subject": "Theory of Computation",
      "chapter": "Regular and context-free languages, pumping lemma",
      "subtopic": "Regular and context-free languages, pumping lemma",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 1.0
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.41",
      "question_text": "The above DFA accepts the set of all strings over {0, 1} that\n[Image of a DFA]",
      "options": [
        "(A) begin either with 0 or 1.",
        "(B) end with 0.",
        "(C) end with 00.",
        "(D) contain the substring 00."
      ],
      "subject": "Theory of Computation",
      "chapter": "Regular expressions and finite automata",
      "subtopic": "Regular expressions and finite automata",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 1.0
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.42",
      "question_text": "Which of the following statements are TRUE ?\nI. There exist parsing algorithms for some programming languages whose complexities are less than Θ(n³).\nII. A programming language which allows recursion can be implemented with static storage allocation.\nIII. No L-attributed definition can be evaluated in the framework of bottom-up parsing.\nIV. Code improving transformations can be performed at both source language and intermediate code level.",
      "options": [
        "(A) I and II",
        "(B) I and IV",
        "(C) III and IV",
        "(D) I, III and IV"
      ],
      "subject": "Compiler Design",
      "chapter": "Lexical analysis, parsing, syntax-directed translation",
      "subtopic": "parsing",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 0.8
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.43",
      "question_text": "Consider two transactions T₁ and T₂, and four schedules S₁, S₂, S₃, S₄ of T₁ and T₂ as given below :\nT₁: R₁[x] W₁[x] W₁[y]\nT₂: R₂[x] R₂[y] W₂[y]\nS₁: R₁[x] R₂[x] R₂[y] W₁[x] W₁[y] W₂[y]\nS₂: R₁[x] R₂[x] R₂[y] W₂[y] W₁[x] W₁[y]\nS₃: R₁[x] W₁[x] R₂[x] W₁[y] R₂[y] W₂[y]\nS₄: R₂[x] R₂[y] R₁[x] W₁[x] W₁[y] W₂[y]\nWhich of the above schedules are conflict-serializable ?",
      "options": [
        "(A) S₁ and S₂",
        "(B) S₂ and S₃",
        "(C) S₃ only",
        "(D) S₄ only"
      ],
      "subject": "Databases",
      "chapter": "Transactions and concurrency control",
      "subtopic": "Transactions and concurrency control",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 1.0
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.44",
      "question_text": "The following key values are inserted into a B+ -tree in which order of the internal nodes is 3, and that of the leaf nodes is 2, in the sequence given below. The order of internal nodes is the maximum number of tree pointers in each node, and the order of leaf nodes is the maximum number of data items that can be stored in it. The B+ -tree is initially empty.\n10, 3, 6, 8, 4, 2, 1\nThe maximum number of times leaf nodes would get split up as a result of these insertions is",
      "options": [
        "(A) 2",
        "(B) 3",
        "(C) 4",
        "(D) 5"
      ],
      "subject": "Databases",
      "chapter": "File organization, indexing (e.g., B and B+ trees)",
      "subtopic": "File organization, indexing (e.g., B and B+ trees)",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 1.0
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.45",
      "question_text": "Let R and S be relational schemes such that R = {a,b,c} and S = {c}. Now consider the following queries on the database :\nI. ΠR-S(r) - ΠR-S(ΠR-S(r) × s - ΠR-S,S(r))\nII. {t | t ∈ ΠR-S(r) ∧ ∀ u ∈ s (∃ v ∈ r (u = v[s] ∧ t = v[R – S]))}\nIII. {t | t ∈ ΠR-S(r) ∧ ∀ v ∈ r (∃ u ∈ s (u = v[s] ∧ t = v[R – S]))}\nIV. Select R.a, R.b\nfrom R, S\nwhere R.c = S.c\nWhich of the above queries are equivalent ?",
      "options": [
        "(A) I and II",
        "(B) I and III",
        "(C) II and IV",
        "(D) III and IV"
      ],
      "subject": "Databases",
      "chapter": "Relational model: relational algebra, tuple calculus, SQL",
      "subtopic": "relational algebra, tuple calculus",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 1.0
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.46",
      "question_text": "In the RSA public key cryptosystem, the private and public keys are (e, n) and (d, n) respectively, where n=p*q and p and q are large primes. Besides, n is public and p and q are private. Let M be an integer such that 0<M<n and φ(n) = (p-1)(q-1). Now consider the following equations.\nI. M' = Mᵉ mod n\nM = (M')ᵈ mod n\nII. ed ≡ 1 mod n\nIII. ed ≡ 1 mod φ(n)\nIV. M' = Mᵉ mod φ(n)\nM = (M')ᵈ mod φ(n)\nWhich of the above equations correctly represent RSA cryptosystem?",
      "options": [
        "(A) I and II",
        "(B) I and III",
        "(C) II and IV",
        "(D) III and IV"
      ],
      "subject": "Engineering Mathematics",
      "chapter": "Discrete Mathematics",
      "subtopic": "OTHER: Number Theory/Cryptography",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 0.4
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.47",
      "question_text": "While opening a TCP connection, the initial sequence number is to be derived using a time-of-day (ToD) clock that keeps running even when the host is down. The low order 32 bits of the counter of the ToD clock is to be used for the initial sequence numbers. The clock counter increments once per millisecond. The maximum packet lifetime is given to be 64s.\nWhich one of the choices given below is closest to the minimum permissible rate at which sequence numbers used for packets of a connection can increase ?",
      "options": [
        "(A) 0.015/s",
        "(B) 0.064/s",
        "(C) 0.135/s",
        "(D) 0.327/s"
      ],
      "subject": "Computer Networks",
      "chapter": "Transport layer: flow control and congestion control, UDP, TCP, sockets",
      "subtopic": "Transport layer: flow control and congestion control, UDP, TCP, sockets",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 1.0
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.48",
      "question_text": "Let G(x) be the generator polynomial used for CRC checking. What is the condition that should be satisfied by G(x) to detect odd number of bits in error ?",
      "options": [
        "(A) G(x) contains more than two terms.",
        "(B) G(x) does not divide 1+xᵏ, for any k not exceeding the frame length.",
        "(C) 1+x is a factor of G(x).",
        "(D) G(x) has an odd number of terms."
      ],
      "subject": "Computer Networks",
      "chapter": "Data link layer: framing, error detection, Medium Access Control, Ethernet bridging",
      "subtopic": "error detection",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 1.0
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.49",
      "question_text": "Which of the following statements are TRUE?\nI. The context diagram should depict the system as a single bubble.\nII. External entities should be identified clearly at all levels of DFDs.\nIII. Control information should not be represented in a DFD.\nIV. A data store can be connected either to another data store or to an external entity.",
      "options": [
        "(A) II and III",
        "(B) I, II and IV",
        "(C) I and III",
        "(D) I, II and III"
      ],
      "subject": "Algorithms",
      "chapter": "Algorithm design techniques: greedy, dynamic programming and divide-and-conquer",
      "subtopic": "OTHER: Software Engineering - DFD",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 0.2
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.50",
      "question_text": "Consider the following statements about the cyclomatic complexity of the control flow graph of a program module. Which of these are TRUE ?\nI. The cyclomatic complexity of a module is equal to the maximum number of linearly independent circuits in the graph.\nII. The cyclomatic complexity of a module is the number of decisions in the module plus one, where a decision is effectively any conditional statement in the module.\nIII. The cyclomatic complexity can also be used as a number of linearly independent paths that should be tested during path coverage testing.",
      "options": [
        "(A) I and II",
        "(B) II and III",
        "(C) I and III",
        "(D) I, II and III"
      ],
      "subject": "Algorithms",
      "chapter": "Asymptotic worst case time and space complexity",
      "subtopic": "OTHER: Software Engineering - Cyclomatic Complexity",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 0.2
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.51",
      "question_text": "Common Data for Questions 51 and 52:\nA hard disk has 63 sectors per track, 10 platters each with 2 recording surfaces and 1000 cylinders. The address of a sector is given as a triple (c,h,s), where c is the cylinder number, h is the surface number and s is the sector number. Thus, the 0th sector is addressed as (0,0,0), the 1st sector as (0,0,1), and so on.\nThe address (400,16,29) corresponds to sector number:",
      "options": [
        "(A) 505035",
        "(B) 505036",
        "(C) 505037",
        "(D) 505038"
      ],
      "subject": "Operating System",
      "chapter": "File systems",
      "subtopic": "File systems",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 1.0
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.52",
      "question_text": "The address of 1039th sector is",
      "options": [
        "(A) (0,15,31)",
        "(B) (0,16,30)",
        "(C) (0,16,31)",
        "(D) (0,17,31)"
      ],
      "subject": "Operating System",
      "chapter": "File systems",
      "subtopic": "File systems",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 1.0
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.53",
      "question_text": "Common Data for Questions 53 and 54:\nA sub-sequence of a given sequence is just the given sequence with some elements (possibly none or all) left out. We are given two sequences X[m] and Y[n] of lengths m and n, respectively, with indexes of X and Y starting from 0.\nWe wish to find the length of the longest common sub-sequence (LCS) of X[m] and Y[n] as l(m,n), where an incomplete recursive definition for the function l(i,j) to compute the length of the LCS of X[m] and Y[n] is given below :\nl(i,j) = 0, if either i=0 or j=0\n= expr1, if i,j>0 and X[i-1]=Y[j-1]\n= expr2, if i,j>0 and X[i-1]≠Y[j-1]\nWhich one of the following options is correct ?",
      "options": [
        "(A) expr1 = l(i−1,j)+1",
        "(B) expr1 = l(i,j−1)",
        "(C) expr2 = max(l(i−1,j), l(i,j−1))",
        "(D) expr2 = max(l(i−1,j−1), l(i,j))"
      ],
      "subject": "Algorithms",
      "chapter": "Algorithm design techniques: greedy, dynamic programming and divide-and-conquer",
      "subtopic": "dynamic programming",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 1.0
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.54",
      "question_text": "The values of l(i,j) could be obtained by dynamic programming based on the correct recursive definition of l(i,j) of the form given above, using an array L[M,N], where M = m + 1 and N = n + 1, such that L[i,j] = l(i,j).\nWhich one the following statements would be TRUE regarding the dynamic programming solution for the recursive definition of l(i,j)?",
      "options": [
        "(A) All elements of L should be initialized to 0 for the values of l(i,j) to be properly computed.",
        "(B) The values of l(i,j) may be computed in a row major order or column major order of L[M,N].",
        "(C) The values of l(i,j) cannot be computed in either row major order or column major order of L[M,N].",
        "(D) L[p,q] needs to be computed before L[r,s] if either p<r or q<s."
      ],
      "subject": "Algorithms",
      "chapter": "Algorithm design techniques: greedy, dynamic programming and divide-and-conquer",
      "subtopic": "dynamic programming",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 1.0
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.55",
      "question_text": "Common Data for Questions 55 and 56:\nConsider the following relational schema :\nSuppliers(sid:integer, sname:string, city:string, street:string)\nParts(pid:integer, pname:string, color:string)\nCatalog(sid:integer, pid:integer, cost:real)\nConsider the following relational query on the above database :\nSELECT S.sname\nFROM Suppliers S\nWHERE S.sid NOT IN (SELECT C.sid\n  FROM Catalog C\n  WHERE C.pid NOT IN (SELECT P.pid\n    FROM Parts P\n    WHERE P.color <> 'blue'))\nAssume that relations corresponding to the above schema are not empty. Which one of the following is the correct interpretation of the above query?",
      "options": [
        "(A) Find the names of all suppliers who have supplied a non-blue part.",
        "(B) Find the names of all suppliers who have not supplied a non-blue part.",
        "(C) Find the names of all suppliers who have supplied only blue parts.",
        "(D) Find the names of all suppliers who have not supplied only blue parts."
      ],
      "subject": "Databases",
      "chapter": "Relational model: relational algebra, tuple calculus, SQL",
      "subtopic": "SQL",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 1.0
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.56",
      "question_text": "Assume that, in the suppliers relation above, each supplier and each street within a city has a unique name, and (sname, city) forms a candidate key. No other functional dependencies are implied other than those implied by primary and candidate keys. Which one of the following is TRUE about the above schema ?",
      "options": [
        "(A) The schema is in BCNF.",
        "(B) The schema is in 3NF but not in BCNF.",
        "(C) The schema is in 2NF but not in 3NF.",
        "(D) The schema is not in 2NF."
      ],
      "subject": "Databases",
      "chapter": "Integrity constraints, normal forms",
      "subtopic": "normal forms",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 1.0
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.57",
      "question_text": "Statement for Linked Answer Questions 57 and 58:\nFrames of 1000 bits are sent over a 10⁶ bps duplex link between two hosts. The propagation time is 25ms. Frames are to be transmitted into this link to maximally pack them in transit (within the link).\nWhat is the minimum number of bits (l) that will be required to represent the sequence numbers distinctly? Assume that no time gap needs to be given between transmission of two frames.",
      "options": [
        "(A) l = 2",
        "(B) l = 3",
        "(C) l = 4",
        "(D) l = 5"
      ],
      "subject": "Computer Networks",
      "chapter": "Data link layer: framing, error detection, Medium Access Control, Ethernet bridging",
      "subtopic": "Data link layer: framing, error detection, Medium Access Control, Ethernet bridging",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 0.9
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.58",
      "question_text": "Suppose that the sliding window protocol is used with the sender window size of 2ˡ, where l is the number of bits identified in the earlier part and acknowledgements are always piggy backed. After sending 2ˡ frames, what is the minimum time the sender will have to wait before starting transmission of the next frame? (Identify the closest choice ignoring the frame processing time.)",
      "options": [
        "(A) 16ms",
        "(B) 18ms",
        "(C) 20ms",
        "(D) 22ms"
      ],
      "subject": "Computer Networks",
      "chapter": "Transport layer: flow control and congestion control, UDP, TCP, sockets",
      "subtopic": "flow control and congestion control",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 1.0
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.59",
      "question_text": "Statement for Linked Answer Questions 59 and 60:\nConsider a binary max-heap implemented using an array.\nWhich one of the following array represents a binary max-heap ?",
      "options": [
        "(A) { 25, 12, 16, 13, 10, 8, 14 }",
        "(B) { 25, 14, 13, 16, 10, 8, 12 }",
        "(C) { 25, 14, 16, 13, 10, 8, 12 }",
        "(D) { 25, 14, 12, 13, 10, 8, 16 }"
      ],
      "subject": "Programming and Data Structures",
      "chapter": "Arrays, stacks, queues, linked lists, trees, binary search trees, binary heaps, graphs",
      "subtopic": "binary heaps",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 1.0
    },
    {
      "year": 2009,
      "paper_code": "CS",
      "question_no": "Q.60",
      "question_text": "What is the content of the array after two delete operations on the correct answer to the previous question ?",
      "options": [
        "(A) { 14, 13, 12, 10, 8 }",
        "(B) { 14, 12, 13, 8, 10 }",
        "(C) { 14, 13, 8, 12, 10 }",
        "(D) { 14, 13, 12, 8, 10 }"
      ],
      "subject": "Programming and Data Structures",
      "chapter": "Arrays, stacks, queues, linked lists, trees, binary search trees, binary heaps, graphs",
      "subtopic": "binary heaps",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE 2009 CS Question Paper",
      "confidence": 1.0
    }
  ]