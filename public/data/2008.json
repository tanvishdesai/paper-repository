[
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.1",
      "question_text": "lim (x→∞) (x - sin x) / (x + cos x) equals",
      "options": [
        "(A) 1",
        "(B) -1",
        "(C) ∞",
        "(D) -∞"
      ],
      "subject": "Engineering Mathematics",
      "chapter": "Calculus",
      "subtopic": "Limits, continuity and differentiability, Maxima and minima, Mean value theorem, Integration",
      "theoretical_practical": "practical",
      "marks": 1,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.2",
      "question_text": "If P, Q, R are subsets of the universal set U, then (P ∩ Q ∩ R) ∪ (Pᶜ ∩ Q ∩ R) ∪ Qᶜ ∪ Rᶜ is",
      "options": [
        "(A) Qᶜ ∪ Rᶜ",
        "(B) P ∪ Qᶜ ∪ Rᶜ",
        "(C) Pᶜ ∪ Qᶜ ∪ Rᶜ",
        "(D) U"
      ],
      "subject": "Engineering Mathematics",
      "chapter": "Discrete Mathematics",
      "subtopic": "Sets, relations, functions, partial orders and lattices",
      "theoretical_practical": "practical",
      "marks": 1,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.3",
      "question_text": "The following system of equations\nx₁ + x₂ + 2x₃ = 1\nx₁ + 2x₂ + 3x₃ = 2\nx₁ + 4x₂ + ax₃ = 4\nhas a unique solution. The only possible value(s) for a is/are",
      "options": [
        "(A) 0",
        "(B) either 0 or 1",
        "(C) one of 0, 1 or -1",
        "(D) any real number"
      ],
      "subject": "Engineering Mathematics",
      "chapter": "Linear Algebra",
      "subtopic": "Matrices, determinants, system of linear equations, eigenvalues and eigenvectors, LU decomposition",
      "theoretical_practical": "practical",
      "marks": 1,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.4",
      "question_text": "In the IEEE floating point representation the hexadecimal value 0x00000000 corresponds to",
      "options": [
        "(A) the normalized value 2⁻¹²⁷",
        "(B) the normalized value 2⁻¹²⁶",
        "(C) the normalized value +0",
        "(D) the special value +0"
      ],
      "subject": "Digital Logic",
      "chapter": "Digital Logic",
      "subtopic": "Number representations and computer arithmetic (fixed and floating point)",
      "theoretical_practical": "theoretical",
      "marks": 1,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.5",
      "question_text": "In the Karnaugh map shown below, X denotes a don't care term. What is the minimal form of the function represented by the Karnaugh map?\n(image of a K-map for variables a,b,c,d with minterms 1s at 0000, 0100, 1000, 1010, 1110 and don't cares at 0101, 1111)",
      "options": [
        "(A) b̅.d̅ + a̅.d̅",
        "(B) a̅.b̅ + b̅.d̅ + a̅.b̅.d̅",
        "(C) b̅.d̅ + a̅.b̅.d̅",
        "(D) a̅.b̅ + b̅.d̅ + a̅.d̅"
      ],
      "subject": "Digital Logic",
      "chapter": "Digital Logic",
      "subtopic": "Minimization",
      "theoretical_practical": "practical",
      "marks": 1,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.6",
      "question_text": "Let r denote number system radix. The only value(s) of r that satisfy the equation √121ᵣ = 11ᵣ is/are",
      "options": [
        "(A) decimal 10",
        "(B) decimal 11",
        "(C) decimal 10 and 11",
        "(D) any value > 2"
      ],
      "subject": "Digital Logic",
      "chapter": "Digital Logic",
      "subtopic": "Number representations and computer arithmetic (fixed and floating point)",
      "theoretical_practical": "practical",
      "marks": 1,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 0.9
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.7",
      "question_text": "The most efficient algorithm for finding the number of connected components in an undirected graph on n vertices and m edges has time complexity",
      "options": [
        "(A) Θ(n)",
        "(B) Θ(m)",
        "(C) Θ(m+n)",
        "(D) Θ(mn)"
      ],
      "subject": "Algorithms",
      "chapter": "Algorithms",
      "subtopic": "Graph traversals, minimum spanning trees, shortest paths",
      "theoretical_practical": "theoretical",
      "marks": 1,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.8",
      "question_text": "Given f₁, f₃ and f in canonical sum of products form (in decimal) for the circuit\n(image of a circuit with f1 and f2 as inputs to an AND gate, and the output of the AND gate along with f3 as inputs to an OR gate, which produces the final output f)\nf₁ = Σ m (4, 5, 6, 7, 8)\nf₃ = Σ m (1, 6, 15)\nf = Σ m (1, 6, 8, 15)\nthen f₂ is",
      "options": [
        "(A) Σ m (4, 6)",
        "(B) Σ m (4, 8)",
        "(C) Σ m (6, 8)",
        "(D) Σ m (4, 6, 8)"
      ],
      "subject": "Digital Logic",
      "chapter": "Digital Logic",
      "subtopic": "Boolean algebra",
      "theoretical_practical": "practical",
      "marks": 1,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.9",
      "question_text": "Which of the following is true for the language {aᵖ | p is a prime}?",
      "options": [
        "(A) It is not accepted by a Turing Machine",
        "(B) It is regular but not context-free",
        "(C) It is context-free but not regular",
        "(D) It is neither regular nor context-free, but accepted by a Turing machine"
      ],
      "subject": "Theory of Computation",
      "chapter": "Theory of Computation",
      "subtopic": "Turing machines and undecidability",
      "theoretical_practical": "theoretical",
      "marks": 1,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.10",
      "question_text": "Which of the following are decidable?\nI. Whether the intersection of two regular languages is infinite\nII. Whether a given context-free language is regular\nIII. Whether two push-down automata accept the same language\nIV. Whether a given grammar is context-free",
      "options": [
        "(A) I and II",
        "(B) I and IV",
        "(C) II and III",
        "(D) II and IV"
      ],
      "subject": "Theory of Computation",
      "chapter": "Theory of Computation",
      "subtopic": "Turing machines and undecidability",
      "theoretical_practical": "theoretical",
      "marks": 1,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.11",
      "question_text": "Which of the following describes a handle (as applicable to LR-parsing) appropriately?",
      "options": [
        "(A) It is the position in a sentential form where the next shift or reduce operation will occur",
        "(B) It is a non-terminal whose production will be used for reduction in the next step",
        "(C) It is a production that may be used for reduction in a future step along with a position in the sentential form where the next shift or reduce operation will occur",
        "(D) It is the production p that will be used for reduction in the next step along with a position in the sentential form where the right hand side of the production may be found"
      ],
      "subject": "Compiler Design",
      "chapter": "Compiler Design",
      "subtopic": "Lexical analysis, parsing, syntax-directed translation",
      "theoretical_practical": "theoretical",
      "marks": 1,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.12",
      "question_text": "Some code optimizations are carried out on the intermediate code because",
      "options": [
        "(A) they enhance the portability of the compiler to other target processors",
        "(B) program analysis is more accurate on intermediate code than on machine code",
        "(C) the information from dataflow analysis cannot otherwise be used for optimization",
        "(D) the information from the front end cannot otherwise be used for optimization"
      ],
      "subject": "Compiler Design",
      "chapter": "Compiler Design",
      "subtopic": "Intermediate code generation",
      "theoretical_practical": "theoretical",
      "marks": 1,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 0.9
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.13",
      "question_text": "If L and L̅ are recursively enumerable then L is",
      "options": [
        "(A) regular",
        "(B) context-free",
        "(C) context-sensitive",
        "(D) recursive"
      ],
      "subject": "Theory of Computation",
      "chapter": "Theory of Computation",
      "subtopic": "Turing machines and undecidability",
      "theoretical_practical": "theoretical",
      "marks": 1,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.14",
      "question_text": "What is the maximum size of data that the application layer can pass on to the TCP layer below?",
      "options": [
        "(A) Any size",
        "(B) 2¹⁶ bytes - size of TCP header",
        "(C) 2¹⁶ bytes",
        "(D) 1500 bytes"
      ],
      "subject": "Computer Networks",
      "chapter": "Computer Networks",
      "subtopic": "Transport layer: flow control and congestion control, UDP, TCP, sockets",
      "theoretical_practical": "theoretical",
      "marks": 1,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.15",
      "question_text": "Which of the following tuple relational calculus expression(s) is/are equivalent to ∀t ∈ r(P(t))?\nI. ¬∃t ∈ r(¬P(t))\nII. ∃t ∈ r(P(t))\nIII. ¬∃t ∈ r(¬P(t))\nIV. ∃t ∈ r(¬P(t))",
      "options": [
        "(A) I only",
        "(B) II only",
        "(C) III only",
        "(D) III and IV only"
      ],
      "subject": "Databases",
      "chapter": "Databases",
      "subtopic": "Relational model: relational algebra, tuple calculus, SQL",
      "theoretical_practical": "theoretical",
      "marks": 1,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.16",
      "question_text": "A clustering index is defined on the fields which are of type",
      "options": [
        "(A) non-key and ordering",
        "(B) non-key and non-ordering",
        "(C) key and ordering",
        "(D) key and non-ordering"
      ],
      "subject": "Databases",
      "chapter": "Databases",
      "subtopic": "File organization, indexing (e.g., B and B+ trees)",
      "theoretical_practical": "theoretical",
      "marks": 1,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.17",
      "question_text": "Which of the following system calls results in the sending of SYN packets?",
      "options": [
        "(A) socket",
        "(B) bind",
        "(C) listen",
        "(D) connect"
      ],
      "subject": "Operating System",
      "chapter": "Operating System",
      "subtopic": "System calls, processes, threads, inter-process communication, concurrency and synchronization",
      "theoretical_practical": "theoretical",
      "marks": 1,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.18",
      "question_text": "Which combination of the integer variables x, y and z makes the variable a get the value 4 in the following expression?\na = ( x > y ) ? ( ( x > z ) ? x : z ) : ( ( y > z ) ? y : z )",
      "options": [
        "(A) x = 3, y = 4, z = 2",
        "(B) x = 6, y = 5, z = 3",
        "(C) x = 6, y = 3, z = 5",
        "(D) x = 5, y = 4, z = 5"
      ],
      "subject": "Programming and Data Structures",
      "chapter": "Programming and Data Structures",
      "subtopic": "Programming in C",
      "theoretical_practical": "practical",
      "marks": 1,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.19",
      "question_text": "The Breadth First Search algorithm has been implemented using the queue data structure. One possible order of visiting the nodes of the following graph is\n(image of an undirected graph with nodes M, N, O, P, Q, R and edges (M,N), (M,R), (M,Q), (N,O), (N,Q), (O,P), (P,Q))",
      "options": [
        "(A) MNOPQR",
        "(B) NQMPOR",
        "(C) QMNPRO",
        "(D) QMNPOR"
      ],
      "subject": "Algorithms",
      "chapter": "Algorithms",
      "subtopic": "Graph traversals, minimum spanning trees, shortest paths",
      "theoretical_practical": "practical",
      "marks": 1,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.20",
      "question_text": "The data blocks of a very large file in the Unix file system are allocated using",
      "options": [
        "(A) contiguous allocation",
        "(B) linked allocation",
        "(C) indexed allocation",
        "(D) an extension of indexed allocation"
      ],
      "subject": "Operating System",
      "chapter": "Operating System",
      "subtopic": "File systems",
      "theoretical_practical": "theoretical",
      "marks": 1,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.21",
      "question_text": "The minimum number of equal length subintervals needed to approximate ∫(from 1 to 2) xeˣ dx to an accuracy of at least (1/3)×10⁻⁶ using the trapezoidal rule is",
      "options": [
        "(A) 1000 e",
        "(B) 1000",
        "(C) 100 e",
        "(D) 100"
      ],
      "subject": "Engineering Mathematics",
      "chapter": "Calculus",
      "subtopic": "Limits, continuity and differentiability, Maxima and minima, Mean value theorem, Integration",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 0.9
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.22",
      "question_text": "The Newton-Raphson iteration xₙ₊₁ = (1/2)(xₙ + R/xₙ) can be used to compute the",
      "options": [
        "(A) square of R",
        "(B) reciprocal of R",
        "(C) square root of R",
        "(D) logarithm of R"
      ],
      "subject": "Engineering Mathematics",
      "chapter": "Calculus",
      "subtopic": "Limits, continuity and differentiability, Maxima and minima, Mean value theorem, Integration",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.23",
      "question_text": "Which of the following statements is true for every planar graph on n vertices?",
      "options": [
        "(A) The graph is connected",
        "(B) The graph is Eulerian",
        "(C) The graph has a vertex-cover of size at most 3n/4",
        "(D) The graph has an independent set of size at least n/3"
      ],
      "subject": "Engineering Mathematics",
      "chapter": "Discrete Mathematics",
      "subtopic": "Graphs: connectivity, matching, colouring",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.24",
      "question_text": "Let P = Σ(i odd, 1≤i≤2k) i and Q = Σ(i even, 1≤i≤2k) i, where k is a positive integer. Then",
      "options": [
        "(A) P = Q - k",
        "(B) P = Q + k",
        "(C) P = Q",
        "(D) P = Q + 2k"
      ],
      "subject": "Engineering Mathematics",
      "chapter": "Discrete Mathematics",
      "subtopic": "Combinatorics: counting, recurrence relations, generating functions",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.25",
      "question_text": "A point on a curve is said to be an extremum if it is a local minimum or a local maximum. The number of distinct extrema for the curve 3x⁴ - 16x³ + 24x² + 37 is",
      "options": [
        "(A) 0",
        "(B) 1",
        "(C) 2",
        "(D) 3"
      ],
      "subject": "Engineering Mathematics",
      "chapter": "Calculus",
      "subtopic": "Limits, continuity and differentiability, Maxima and minima, Mean value theorem, Integration",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.26",
      "question_text": "If P, Q, R are Boolean variables, then (P̅+Q̅)(P.Q̅+P.R)(P̅.R+Q̅) simplifies to",
      "options": [
        "(A) P̅.Q̅",
        "(B) P̅.R",
        "(C) P̅.Q̅+R",
        "(D) P̅.R+Q̅"
      ],
      "subject": "Digital Logic",
      "chapter": "Digital Logic",
      "subtopic": "Boolean algebra",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.27",
      "question_text": "Aishwarya studies either computer science or mathematics everyday. If she studies computer science on a day, then the probability that she studies mathematics the next day is 0.6. If she studies mathematics on a day, then the probability that she studies computer science the next day is 0.4. Given that Aishwarya studies computer science on Monday, what is the probability that she studies computer science on Wednesday?",
      "options": [
        "(A) 0.24",
        "(B) 0.36",
        "(C) 0.4",
        "(D) 0.6"
      ],
      "subject": "Engineering Mathematics",
      "chapter": "Probability and Statistics",
      "subtopic": "Conditional probability and Bayes theorem",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.28",
      "question_text": "How many of the following matrices have an eigenvalue 1?\n[1 0; 0 0], [0 1; 0 0], [1 -1; 1 1], [-1 0; 1 -1]",
      "options": [
        "(A) one",
        "(B) two",
        "(C) three",
        "(D) four"
      ],
      "subject": "Engineering Mathematics",
      "chapter": "Linear Algebra",
      "subtopic": "Matrices, determinants, system of linear equations, eigenvalues and eigenvectors, LU decomposition",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.29",
      "question_text": "Let X be a random variable following normal distribution with mean +1 and variance 4. Let Y be another normal variable with mean -1 and variance unknown. If P(X ≤ -1) = P( Y ≥ 2), the standard deviation of Y is",
      "options": [
        "(A) 3",
        "(B) 2",
        "(C) √2",
        "(D) 1"
      ],
      "subject": "Engineering Mathematics",
      "chapter": "Probability and Statistics",
      "subtopic": "Random variables, Uniform, normal, exponential, Poisson and binomial distributions",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.30",
      "question_text": "Let fsa and pda be two predicates such that fsa(x) means x is a finite state automaton, and pda(y) means that y is a pushdown automaton. Let equivalent be another predicate such that equivalent(a,b) means a and b are equivalent. Which of the following first order logic statements represents the following:\nEach finite state automaton has an equivalent pushdown automaton.",
      "options": [
        "(A) (∀x fsa(x)) ⇒ (∃y pda(y) ∧ equivalent (x, y))",
        "(B) ~∀y (∃x fsa(x) ⇒ pda (y) ∧ equivalent (x, y))",
        "(C) ∀x ∃y (fsa(x) ∧ pda(y) ∧ equivalent (x, y))",
        "(D) ∀x ∃y (fsa(y) ∧ pda(x) ∧ equivalent (x, y))"
      ],
      "subject": "Engineering Mathematics",
      "chapter": "Discrete Mathematics",
      "subtopic": "Propositional and first order logic",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.31",
      "question_text": "P and Q are two propositions. Which of the following logical expressions are equivalent?\nI. P ∨ ~Q\nII. ~(~P ∧ Q)\nIII. (P ⇒ Q) ∧ (~P ∨ ~Q) ∨ (~P ∧ ~Q)\nIV. (P ⇒ Q) ∧ (P ∧ ~Q) ∨ (~P ∧ Q)",
      "options": [
        "(A) Only I and II",
        "(B) Only I, II and III",
        "(C) Only I, II and IV",
        "(D) All of I, II, III and IV"
      ],
      "subject": "Engineering Mathematics",
      "chapter": "Discrete Mathematics",
      "subtopic": "Propositional and first order logic",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.32",
      "question_text": "For a magnetic disk with concentric circular tracks, the seek latency is not linearly proportional to the seek distance due to",
      "options": [
        "(A) non-uniform distribution of requests",
        "(B) arm starting and stopping inertia",
        "(C) higher capacity of tracks on the periphery of the platter",
        "(D) use of unfair arm scheduling policies"
      ],
      "subject": "Computer Organization and Architecture",
      "chapter": "Computer Organization and Architecture",
      "subtopic": "Memory hierarchy: cache, main memory and secondary storage; I/O interface (interrupt and DMA mode)",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.33",
      "question_text": "Which of the following is/are true of the auto-increment addressing mode?\nI. It is useful in creating self-relocating code\nII. If it is included in an Instruction Set Architecture, then an additional ALU is required for effective address calculation\nIII. The amount of increment depends on the size of the data item accessed",
      "options": [
        "(A) I only",
        "(B) II only",
        "(C) III only",
        "(D) II and III only"
      ],
      "subject": "Computer Organization and Architecture",
      "chapter": "Computer Organization and Architecture",
      "subtopic": "Machine instructions and addressing modes",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.34",
      "question_text": "Which of the following must be true for the RFE (Return from Exception) instruction on a general purpose processor?\nI. It must be a trap instruction\nII. It must be a privileged instruction\nIII. An exception cannot be allowed to occur during execution of an RFE instruction",
      "options": [
        "(A) I only",
        "(B) II only",
        "(C) I and II only",
        "(D) I, II and III only"
      ],
      "subject": "Computer Organization and Architecture",
      "chapter": "Computer Organization and Architecture",
      "subtopic": "ALU, data-path and control unit",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 0.9
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.35",
      "question_text": "For inclusion to hold between two cache levels L1 and L2 in a multi-level cache hierarchy, which of the following are necessary?\nI. L1 must be a write-through cache\nII. L2 must be a write-through cache\nIII. The associativity of L2 must be greater than that of L1\nIV. The L2 cache must be at least as large as the L1 cache",
      "options": [
        "(A) IV only",
        "(B) I and IV only",
        "(C) I, III and IV only",
        "(D) I, II, III and IV"
      ],
      "subject": "Computer Organization and Architecture",
      "chapter": "Computer Organization and Architecture",
      "subtopic": "Memory hierarchy: cache, main memory and secondary storage; I/O interface (interrupt and DMA mode)",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.36",
      "question_text": "Which of the following are NOT true in a pipelined processor?\nI. Bypassing can handle all RAW hazards.\nII. Register renaming can eliminate all register carried WAR hazards.\nIII. Control hazard penalties can be eliminated by dynamic branch prediction.",
      "options": [
        "(A) I and II only",
        "(B) I and III only",
        "(C) II and III only",
        "(D) I, II and III"
      ],
      "subject": "Computer Organization and Architecture",
      "chapter": "Computer Organization and Architecture",
      "subtopic": "Instruction pipelining, pipeline hazards",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.37",
      "question_text": "The use of multiple register windows with overlap causes a reduction in the number of memory accesses for\nI. function locals and parameters\nII. register saves and restores\nIII. instruction fetches",
      "options": [
        "(A) I only",
        "(B) II only",
        "(C) III only",
        "(D) I, II and III"
      ],
      "subject": "Computer Organization and Architecture",
      "chapter": "Computer Organization and Architecture",
      "subtopic": "ALU, data-path and control unit",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 0.8
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.38",
      "question_text": "In an instruction execution pipeline, the earliest that the data TLB (Translation Lookaside Buffer) can be accessed is",
      "options": [
        "(A) before effective address calculation has started",
        "(B) during effective address calculation",
        "(C) after effective address calculation has completed",
        "(D) after data cache lookup has completed"
      ],
      "subject": "Computer Organization and Architecture",
      "chapter": "Computer Organization and Architecture",
      "subtopic": "Instruction pipelining, pipeline hazards",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.39",
      "question_text": "Consider the following functions:\nf(n) = 2ⁿ\ng(n) = n!\nh(n) = nˡᵒᵍⁿ\nWhich of the following statements about the asymptotic behaviour of f(n), g(n), and h(n) is true?",
      "options": [
        "(A) f(n) = O(g(n)); g(n) = O(h(n))",
        "(B) f(n) = Ω(g(n)); g(n) = O(h(n))",
        "(C) g(n) = O(f(n)); h(n) = O(f(n))",
        "(D) h(n) = O(f(n)); g(n) = Ω(f(n))"
      ],
      "subject": "Algorithms",
      "chapter": "Algorithms",
      "subtopic": "Asymptotic worst case time and space complexity",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.40",
      "question_text": "The minimum number of comparisons required to determine if an integer appears more than n /2 times in a sorted array of n integers is",
      "options": [
        "(A) Θ(n)",
        "(B) Θ(log n)",
        "(C) Θ(log² n)",
        "(D) Θ(1)"
      ],
      "subject": "Algorithms",
      "chapter": "Algorithms",
      "subtopic": "Searching, sorting, hashing",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.41",
      "question_text": "A B-tree of order 4 is built from scratch by 10 successive insertions. What is the maximum number of node splitting operations that may take place?",
      "options": [
        "(A) 3",
        "(B) 4",
        "(C) 5",
        "(D) 6"
      ],
      "subject": "Databases",
      "chapter": "Databases",
      "subtopic": "File organization, indexing (e.g., B and B+ trees)",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.42",
      "question_text": "G is a graph on n vertices and 2n-2 edges. The edges of G can be partitioned into two edge-disjoint spanning trees. Which of the following is NOT true for G?",
      "options": [
        "(A) For every subset of k vertices, the induced subgraph has at most 2k-2 edges",
        "(B) The minimum cut in G has at least two edges",
        "(C) There are two edge-disjoint paths between every pair of vertices",
        "(D) There are two vertex-disjoint paths between every pair of vertices"
      ],
      "subject": "Engineering Mathematics",
      "chapter": "Discrete Mathematics",
      "subtopic": "Graphs: connectivity, matching, colouring",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.43",
      "question_text": "Consider the Quicksort algorithm. Suppose there is a procedure for finding a pivot element which splits the list into two sub-lists each of which contains at least one-fifth of the elements. Let T(n) be the number of comparisons required to sort n elements. Then",
      "options": [
        "(A) T(n) ≤ 2T(n/5) + n",
        "(B) T(n) ≤ T(n/5) + T(4n/5) + n",
        "(C) T(n) ≤ 2T(4n/5) + n",
        "(D) T(n) ≤ 2T(n/2) + n"
      ],
      "subject": "Algorithms",
      "chapter": "Algorithms",
      "subtopic": "Algorithm design techniques: greedy, dynamic programming and divide-and-conquer",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.44",
      "question_text": "The subset-sum problem is defined as follows: Given a set S of n positive integers and a positive integer W, determine whether there is a subset of S whose elements sum to W. An algorithm Q solves this problem in O(nW) time. Which of the following statements is false?",
      "options": [
        "(A) Q solves the subset-sum problem in polynomial time when the input is encoded in unary",
        "(B) Q solves the subset-sum problem in polynomial time when the input is encoded in binary",
        "(C) The subset sum problem belongs to the class NP",
        "(D) The subset sum problem is NP-hard"
      ],
      "subject": "Algorithms",
      "chapter": "Algorithms",
      "subtopic": "Asymptotic worst case time and space complexity",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 0.9
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.45",
      "question_text": "Dijkstra's single source shortest path algorithm when run from vertex a in the above graph, computes the correct shortest path distance to\n(image of a directed graph with negative edge weights)",
      "options": [
        "(A) only vertex a",
        "(B) only vertices a, e, f, g, h",
        "(C) only vertices a, b, c, d",
        "(D) all the vertices"
      ],
      "subject": "Algorithms",
      "chapter": "Algorithms",
      "subtopic": "Graph traversals, minimum spanning trees, shortest paths",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.46",
      "question_text": "You are given the postorder traversal, P, of a binary search tree on the n elements 1,2,...,n. You have to determine the unique binary search tree that has P as its postorder traversal. What is the time complexity of the most efficient algorithm for doing this?",
      "options": [
        "(A) O(log n)",
        "(B) Θ(n)",
        "(C) O(n log n)",
        "(D) none of the above, as the tree cannot be uniquely determined."
      ],
      "subject": "Programming and Data Structures",
      "chapter": "Programming and Data Structures",
      "subtopic": "Arrays, stacks, queues, linked lists, trees, binary search trees, binary heaps, graphs",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.47",
      "question_text": "We have a binary heap on n elements and wish to insert n more elements (not necessarily one after another) into this heap. The total time required for this is",
      "options": [
        "(A) Θ(log n)",
        "(B) Θ(n)",
        "(C) Θ(n log n)",
        "(D) Θ(n²)"
      ],
      "subject": "Programming and Data Structures",
      "chapter": "Programming and Data Structures",
      "subtopic": "Arrays, stacks, queues, linked lists, trees, binary search trees, binary heaps, graphs",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.48",
      "question_text": "Which of the following statements is false?",
      "options": [
        "(A) Every NFA can be converted to an equivalent DFA",
        "(B) Every non-deterministic Turing machine can be converted to an equivalent deterministic Turing machine",
        "(C) Every regular language is also a context-free language",
        "(D) Every subset of a recursively enumerable set is recursive"
      ],
      "subject": "Theory of Computation",
      "chapter": "Theory of Computation",
      "subtopic": "Turing machines and undecidability",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.49",
      "question_text": "Given below are two finite state automata (→ indicates the start state and F indicates a final state)\nY: (table for state transitions of automaton Y)\nZ: (table for state transitions of automaton Z)\nWhich of the following represents the product automaton Z x Y?",
      "options": [
        "(A) (table for product automaton A)",
        "(B) (table for product automaton B)",
        "(C) (table for product automaton C)",
        "(D) (table for product automaton D)"
      ],
      "subject": "Theory of Computation",
      "chapter": "Theory of Computation",
      "subtopic": "Regular expressions and finite automata",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.50",
      "question_text": "Which of the following statements are true?\nI. Every left-recursive grammar can be converted to a right-recursive grammar and vice-versa\nII. All ε-productions can be removed from any context-free grammar by suitable transformations\nIII. The language generated by a context-free grammar all of whose productions are of the form X→w or X→wY (where, w is a string of terminals and Y is a non-terminal), is always regular\nIV. The derivation trees of strings generated by a context-free grammar in Chomsky Normal Form are always binary trees",
      "options": [
        "(A) I, II, III and IV",
        "(B) II, III and IV only",
        "(C) I, III and IV only",
        "(D) I, II and IV only"
      ],
      "subject": "Theory of Computation",
      "chapter": "Theory of Computation",
      "subtopic": "Context-free grammars and push-down automata",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.51",
      "question_text": "Match the following:\n(E) Checking that identifiers are declared before their use\n(F) Number of formal parameters in the declaration of a function agrees with the number of actual parameters in a use of that function\n(G) Arithmetic expressions with matched pairs of parentheses\n(H) Palindromes\n\n(P) L = {aⁿbᵐcᵈⁿ | n ≥ 1, m ≥ 1}\n(Q) X → XbX | XcX | dXf | g\n(R) L = { wcw | w ∈ {a | b}* }\n(S) X → bXb | cXc | ε",
      "options": [
        "(A) E-P, F-R, G-Q, H-S",
        "(B) E-R, F-P, G-S, H-Q",
        "(C) E-R, F-P, G-Q, H-S",
        "(D) E-P, F-R, G-S, H-Q"
      ],
      "subject": "Compiler Design",
      "chapter": "Compiler Design",
      "subtopic": "Lexical analysis, parsing, syntax-directed translation",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 0.8
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.52",
      "question_text": "Match the following NFAs with the regular expressions they correspond to.\n(P) (image of NFA P)\n(Q) (image of NFA Q)\n(R) (image of NFA R)\n(S) (image of NFA S)\n\n1. ε + 0(01*1+00)*01*\n2. ε + 0(10*1+00)*0\n3. ε + 0(10*1+10)*1\n4. ε + 0(10*1+10)*10*",
      "options": [
        "(A) P-2, Q-1, R-3, S-4",
        "(B) P-1, Q-3, R-2, S-4",
        "(C) P-1, Q-2, R-3, S-4",
        "(D) P-3, Q-2, R-1, S-4"
      ],
      "subject": "Theory of Computation",
      "chapter": "Theory of Computation",
      "subtopic": "Regular expressions and finite automata",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.53",
      "question_text": "Which of the following are regular sets?\nI. {aⁿb²ᵐ | n ≥ 0, m ≥ 0}\nII. {aⁿbᵐ | n = 2m}\nIII. {aⁿbᵐ | n ≠ m}\nIV. {xcy | x,y ∈ {a,b}*}",
      "options": [
        "(A) I and IV only",
        "(B) I and III only",
        "(C) I only",
        "(D) IV only"
      ],
      "subject": "Theory of Computation",
      "chapter": "Theory of Computation",
      "subtopic": "Regular and context-free languages, pumping lemma",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.54",
      "question_text": "Which of the following are true?\nI. A programming language which does not permit global variables of any kind and has no nesting of procedures/functions, but permits recursion can be implemented with static storage allocation\nII. Multi-level access link (or display) arrangement is needed to arrange activation records only if the programming language being implemented has nesting of procedures/functions\nIII. Recursion in programming languages cannot be implemented with dynamic storage allocation\nIV. Nesting of procedures/functions and recursion require a dynamic heap allocation scheme and cannot be implemented with a stack-based allocation scheme for activation records\nV. Programming languages which permit a function to return a function as its result cannot be implemented with a stack-based storage allocation scheme for activation records",
      "options": [
        "(A) II and V only",
        "(B) I, III and IV only",
        "(C) I, II and V only",
        "(D) II, III and V only"
      ],
      "subject": "Compiler Design",
      "chapter": "Compiler Design",
      "subtopic": "Runtime environments",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.55",
      "question_text": "An LALR(1) parser for a grammar G can have shift-reduce (S-R) conflicts if and only if",
      "options": [
        "(A) the SLR(1) parser for G has S-R conflicts",
        "(B) the LR(1) parser for G has S-R conflicts",
        "(C) the LR(0) parser for G has S-R conflicts",
        "(D) the LALR(1) parser for G has reduce-reduce conflicts"
      ],
      "subject": "Compiler Design",
      "chapter": "Compiler Design",
      "subtopic": "Lexical analysis, parsing, syntax-directed translation",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.56",
      "question_text": "In the slow start phase of the TCP congestion control algorithm, the size of the congestion window",
      "options": [
        "(A) does not increase",
        "(B) increases linearly",
        "(C) increases quadratically",
        "(D) increases exponentially"
      ],
      "subject": "Computer Networks",
      "chapter": "Computer Networks",
      "subtopic": "Transport layer: flow control and congestion control, UDP, TCP, sockets",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.57",
      "question_text": "If a class B network on the Internet has a subnet mask of 255.255.248.0, what is the maximum number of hosts per subnet?",
      "options": [
        "(A) 1022",
        "(B) 1023",
        "(C) 2046",
        "(D) 2047"
      ],
      "subject": "Computer Networks",
      "chapter": "Computer Networks",
      "subtopic": "Fragmentation and IP addressing, IPv4, CIDR notation, Basics of IP support protocols (ARP, DHCP, ICMP), Network Address Translation (NAT)",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.58",
      "question_text": "A computer on a 10Mbps network is regulated by a token bucket. The token bucket is filled at a rate of 2Mbps. It is initially filled to capacity with 16 Megabits. What is the maximum duration for which the computer can transmit at the full 10Mbps?",
      "options": [
        "(A) 1.6 seconds",
        "(B) 2 seconds",
        "(C) 5 seconds",
        "(D) 8 seconds"
      ],
      "subject": "Computer Networks",
      "chapter": "Computer Networks",
      "subtopic": "Transport layer: flow control and congestion control, UDP, TCP, sockets",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 0.9
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.59",
      "question_text": "A client process P needs to make a TCP connection to a server process S. Consider the following situation: the server process S executes a socket(), a bind() and a listen() system call in that order, following which it is preempted. Subsequently, the client process P executes a socket() system call followed by connect() system call to connect to the server process S. The server process has not executed any accept() system call. Which one of the following events could take place?",
      "options": [
        "(A) connect() system call returns successfully",
        "(B) connect() system call blocks",
        "(C) connect() system call returns an error",
        "(D) connect() system call results in a core dump"
      ],
      "subject": "Computer Networks",
      "chapter": "Computer Networks",
      "subtopic": "Transport layer: flow control and congestion control, UDP, TCP, sockets",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.60",
      "question_text": "What is printed by the following C program?\nint f(int x, int *py, int **ppz) {\n  int y, z;\n  **ppz += 1; z = **ppz;\n  *py += 2; y = *py;\n  x += 3;\n  return x+y+z;\n}\nvoid main() {\n  int c, *b, **a;\n  c = 4; b = &c; a = &b;\n  printf(\"%d\", f(c,b,a));\n}",
      "options": [
        "(A) 18",
        "(B) 19",
        "(C) 21",
        "(D) 22"
      ],
      "subject": "Programming and Data Structures",
      "chapter": "Programming and Data Structures",
      "subtopic": "Programming in C",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.61",
      "question_text": "Choose the correct option to fill ?1 and ?2 so that the program below prints an input string in reverse order. Assume that the input string is terminated by a newline character.\nvoid reverse(void) {\n  int c;\n  if(?1) reverse();\n  ?2\n}\nmain() {\n  printf(\"Enter Text\"); printf(\"\\n\");\n  reverse(); printf(\"\\n\");\n}",
      "options": [
        "(A) ?1 is (getchar() != '\\n'), ?2 is getchar(c);",
        "(B) ?1 is (c = getchar()) != '\\n'), ?2 is getchar(c);",
        "(C) ?1 is (c != '\\n'), ?2 is putchar(c);",
        "(D) ?1 is ((c = getchar()) != '\\n'), ?2 is putchar(c);"
      ],
      "subject": "Programming and Data Structures",
      "chapter": "Programming and Data Structures",
      "subtopic": "Recursion",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.62",
      "question_text": "The following C function takes a singly-linked list of integers as a parameter and rearranges the elements of the list. The function is called with the list containing the integers 1,2,3,4,5,6,7 in the given order. What will be the contents of the list after the function completes execution?\nstruct node {\n  int value;\n  struct node *next;\n};\nvoid rearrange (struct node *list) {\n  struct node *p, *q;\n  int temp;\n  if (!list || !list -> next) return;\n  p = list; q = list -> next;\n  while (q) {\n    temp = p -> value; p -> value = q -> value;\n    q -> value = temp;\n    p = q -> next;\n    q = p ? p -> next : 0;\n  }\n}",
      "options": [
        "(A) 1,2,3,4,5,6,7",
        "(B) 2,1,4,3,6,5,7",
        "(C) 1,3,2,5,4,7,6",
        "(D) 2,3,4,5,6,7,1"
      ],
      "subject": "Programming and Data Structures",
      "chapter": "Programming and Data Structures",
      "subtopic": "Arrays, stacks, queues, linked lists, trees, binary search trees, binary heaps, graphs",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.63",
      "question_text": "The P and V operations on counting semaphores, where s is a counting semaphore, are defined as follows:\nP(s): s = s - 1; if s < 0 then wait;\nV(s): s = s + 1; if s <= 0 then wakeup a process waiting on s;\nAssume that Pь and Vь, the wait and signal operations on binary semaphores are provided. Two binary semaphores xь and yь are used to implement the semaphore operations P(s) and V(s) as follows:\nP(s): Pь(xь);\n      s = s - 1;\n      if (s < 0) {\n        Vь(xь);\n        Pь(yь);\n      }\n      else Vь(xь);\nV(s): Pь(xь);\n      s = s + 1;\n      if (s <= 0) Vь(yь);\n      Vь(xь);\nThe initial values of xь and yь are respectively",
      "options": [
        "(A) 0 and 0",
        "(B) 0 and 1",
        "(C) 1 and 0",
        "(D) 1 and 1"
      ],
      "subject": "Operating System",
      "chapter": "Operating System",
      "subtopic": "System calls, processes, threads, inter-process communication, concurrency and synchronization",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.64",
      "question_text": "Which of the following statements about synchronous and asynchronous I/O is NOT true?",
      "options": [
        "(A) An ISR is invoked on completion of I/O in synchronous I/O but not in asynchronous I/O",
        "(B) In both synchronous and asynchronous I/O, an ISR (Interrupt Service Routine) is invoked after completion of the I/O",
        "(C) A process making a synchronous I/O call waits until I/O is complete, but a process making an asynchronous I/O call does not wait for completion of the I/O",
        "(D) In the case of synchronous I/O, the process waiting for the completion of I/O is woken up by the ISR that is invoked after the completion of I/O"
      ],
      "subject": "Computer Organization and Architecture",
      "chapter": "Computer Organization and Architecture",
      "subtopic": "Memory hierarchy: cache, main memory and secondary storage; I/O interface (interrupt and DMA mode)",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.65",
      "question_text": "Which of the following is NOT true of deadlock prevention and deadlock avoidance schemes?",
      "options": [
        "(A) In deadlock prevention, the request for resources is always granted if the resulting state is safe",
        "(B) In deadlock avoidance, the request for resources is always granted if the resulting state is safe",
        "(C) Deadlock avoidance is less restrictive than deadlock prevention",
        "(D) Deadlock avoidance requires knowledge of resource requirements a priori"
      ],
      "subject": "Operating System",
      "chapter": "Operating System",
      "subtopic": "Deadlock",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.66",
      "question_text": "A process executes the following code\nfor(i=0; i<n; i++) fork();\nThe total number of child processes created is",
      "options": [
        "(A) n",
        "(B) 2ⁿ - 1",
        "(C) 2ⁿ",
        "(D) 2ⁿ⁺¹ - 1"
      ],
      "subject": "Operating System",
      "chapter": "Operating System",
      "subtopic": "System calls, processes, threads, inter-process communication, concurrency and synchronization",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.67",
      "question_text": "A processor uses 36 bit physical addresses and 32 bit virtual addresses, with a page frame size of 4 Kbytes. Each page table entry is of size 4 bytes. A three level page table is used for virtual-to-physical address translation, where the virtual address is used as follows\n- bits 30-31 are used to index into the first level page table,\n- bits 21-29 are used to index into the second level page table,\n- bits 12-20 are used to index into the third level page table, and\n- bits 0-11 are used as offset within the page.\nThe number of bits required for addressing the next level page table (or page frame) in the page table entry of the first, second and third level page tables are respectively",
      "options": [
        "(A) 20, 20 and 20",
        "(B) 24, 24 and 24",
        "(C) 24, 24 and 20",
        "(D) 25, 25 and 24"
      ],
      "subject": "Operating System",
      "chapter": "Operating System",
      "subtopic": "Memory management and virtual memory",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.68",
      "question_text": "Let R and S be two relations with the following schema\nR(P, Q, R1, R2, R3)\nS(P, Q, S1, S2)\nwhere {P,Q} is the key for both schemas. Which of the following queries are equivalent?\nI. Π_P (R ⨝ S)\nII. Π_P (R) ⨝ Π_P (S)\nIII. Π_P (Π_{P,Q} (R) ∩ Π_{P,Q} (S))\nIV. Π_P (Π_{P,Q} (R) - (Π_{P,Q} (R) - Π_{P,Q} (S)))",
      "options": [
        "(A) Only I and II",
        "(B) Only I and III",
        "(C) Only I, II and III",
        "(D) Only I, III and IV"
      ],
      "subject": "Databases",
      "chapter": "Databases",
      "subtopic": "Relational model: relational algebra, tuple calculus, SQL",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.69",
      "question_text": "Consider the following relational schemes for a library database:\nBook (Title, Author, Catalog_no, Publisher, Year, Price)\nCollection (Title, Author, Catalog_no)\nwith the following functional dependencies:\nI. Title Author → Catalog_no\nII. Catalog_no → Title Author Publisher Year\nIII. Publisher Title Year → Price\nAssume {Author, Title} is the key for both schemes. Which of the following statements is true?",
      "options": [
        "(A) Both Book and Collection are in BCNF",
        "(B) Both Book and Collection are in 3NF only",
        "(C) Book is in 2NF and Collection is in 3NF",
        "(D) Both Book and Collection are in 2NF only"
      ],
      "subject": "Databases",
      "chapter": "Databases",
      "subtopic": "Integrity constraints, normal forms",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.70",
      "question_text": "Consider a file of 16384 records. Each record is 32 bytes long and its key field is of size 6 bytes. The file is ordered on a non-key field, and the file organization is unspanned. The file is stored in a file system with block size 1024 bytes, and the size of a block pointer is 10 bytes. If the secondary index is built on the key field of the file, and a multi-level index scheme is used to store the secondary index, the number of first-level and second-level blocks in the multi-level index are respectively",
      "options": [
        "(A) 8 and 0",
        "(B) 128 and 6",
        "(C) 256 and 4",
        "(D) 512 and 5"
      ],
      "subject": "Databases",
      "chapter": "Databases",
      "subtopic": "File organization, indexing (e.g., B and B+ trees)",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.71",
      "question_text": "Common Data for Questions 71,72 and 73:\nConsider a machine with a 2-way set associative data cache of size 64 Kbytes and block size 16 bytes. The cache is managed using 32 bit virtual addresses and the page size is 4 Kbytes. A program to be run on this machine begins as follows:\ndouble ARR [1024] [1024];\nint i, j;\n/* Initialize array ARR to 0.0 */\nfor (i = 0; i < 1024; i++)\n  for (j = 0; j < 1024; j++)\n    ARR [i] [j] = 0.0;\nThe size of double is 8Bytes. Array ARR is located in memory starting at the beginning of virtual page 0xFF000 and stored in row major order. The cache is initially empty and no pre-fetching is done. The only data memory references made by the program are those to array ARR.\n\nThe total size of the tags in the cache directory is",
      "options": [
        "(A) 32 Kbits",
        "(B) 34 Kbits",
        "(C) 64 Kbits",
        "(D) 68 Kbits"
      ],
      "subject": "Computer Organization and Architecture",
      "chapter": "Computer Organization and Architecture",
      "subtopic": "Memory hierarchy: cache, main memory and secondary storage; I/O interface (interrupt and DMA mode)",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.72",
      "question_text": "Common Data for Questions 71,72 and 73:\nConsider a machine with a 2-way set associative data cache of size 64 Kbytes and block size 16 bytes. The cache is managed using 32 bit virtual addresses and the page size is 4 Kbytes. A program to be run on this machine begins as follows:\ndouble ARR [1024] [1024];\nint i, j;\n/* Initialize array ARR to 0.0 */\nfor (i = 0; i < 1024; i++)\n  for (j = 0; j < 1024; j++)\n    ARR [i] [j] = 0.0;\nThe size of double is 8Bytes. Array ARR is located in memory starting at the beginning of virtual page 0xFF000 and stored in row major order. The cache is initially empty and no pre-fetching is done. The only data memory references made by the program are those to array ARR.\n\nWhich of the following array elements has the same cache index as ARR [0] [0]?",
      "options": [
        "(A) ARR [0] [4]",
        "(B) ARR [4] [0]",
        "(C) ARR [0] [5]",
        "(D) ARR [5] [0]"
      ],
      "subject": "Computer Organization and Architecture",
      "chapter": "Computer Organization and Architecture",
      "subtopic": "Memory hierarchy: cache, main memory and secondary storage; I/O interface (interrupt and DMA mode)",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.73",
      "question_text": "Common Data for Questions 71,72 and 73:\nConsider a machine with a 2-way set associative data cache of size 64 Kbytes and block size 16 bytes. The cache is managed using 32 bit virtual addresses and the page size is 4 Kbytes. A program to be run on this machine begins as follows:\ndouble ARR [1024] [1024];\nint i, j;\n/* Initialize array ARR to 0.0 */\nfor (i = 0; i < 1024; i++)\n  for (j = 0; j < 1024; j++)\n    ARR [i] [j] = 0.0;\nThe size of double is 8Bytes. Array ARR is located in memory starting at the beginning of virtual page 0xFF000 and stored in row major order. The cache is initially empty and no pre-fetching is done. The only data memory references made by the program are those to array ARR.\n\nThe cache hit ratio for this initialization loop is",
      "options": [
        "(A) 0%",
        "(B) 25%",
        "(C) 50%",
        "(D) 75%"
      ],
      "subject": "Computer Organization and Architecture",
      "chapter": "Computer Organization and Architecture",
      "subtopic": "Memory hierarchy: cache, main memory and secondary storage; I/O interface (interrupt and DMA mode)",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.74",
      "question_text": "Common Data for Questions 74 and 75:\nConsider the following C functions:\nint f1 (int n) {\n  if (n == 0 || n == 1)\n    return n;\n  else\n    return (2*f1(n-1) + 3*f1(n-2));\n}\nint f2 (int n) {\n  int i;\n  int X[n], Y[n], Z[n];\n  X[0] = Y[0] = Z[0] = 0;\n  X[1] = 1; Y[1] = 2; Z[1] = 3;\n  for (i = 2; i <= n; i++) {\n    X[i] = Y[i-1] + Z[i-2];\n    Y[i] = 2 * X[i];\n    Z[i] = 3 * X[i];\n  }\n  return X[n];\n}\n\nThe running time of f1(n) and f2(n) are",
      "options": [
        "(A) Θ(n) and Θ(n)",
        "(B) Θ(2ⁿ) and Θ(n)",
        "(C) Θ(n) and Θ(2ⁿ)",
        "(D) Θ(2ⁿ) and Θ(2ⁿ)"
      ],
      "subject": "Algorithms",
      "chapter": "Algorithms",
      "subtopic": "Asymptotic worst case time and space complexity",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.75",
      "question_text": "Common Data for Questions 74 and 75:\nConsider the following C functions:\nint f1 (int n) {\n  if (n == 0 || n == 1)\n    return n;\n  else\n    return (2*f1(n-1) + 3*f1(n-2));\n}\nint f2 (int n) {\n  int i;\n  int X[n], Y[n], Z[n];\n  X[0] = Y[0] = Z[0] = 0;\n  X[1] = 1; Y[1] = 2; Z[1] = 3;\n  for (i = 2; i <= n; i++) {\n    X[i] = Y[i-1] + Z[i-2];\n    Y[i] = 2 * X[i];\n    Z[i] = 3 * X[i];\n  }\n  return X[n];\n}\n\nf1(8) and f2(8) return the values",
      "options": [
        "(A) 1661 and 1640",
        "(B) 59 and 59",
        "(C) 1640 and 1640",
        "(D) 1640 and 1661"
      ],
      "subject": "Programming and Data Structures",
      "chapter": "Programming and Data Structures",
      "subtopic": "Recursion",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.76",
      "question_text": "Statement for Linked Answer Questions 76 and 77:\nDelayed branching can help in the handling of control hazards.\n\nFor all delayed conditional branch instructions, irrespective of whether the condition evaluates to true or false,",
      "options": [
        "(A) the instruction following the conditional branch instruction in memory is executed",
        "(B) the first instruction in the fall through path is executed",
        "(C) the first instruction in the taken path is executed",
        "(D) the branch takes longer to execute than any other instruction"
      ],
      "subject": "Computer Organization and Architecture",
      "chapter": "Computer Organization and Architecture",
      "subtopic": "Instruction pipelining, pipeline hazards",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.77",
      "question_text": "Statement for Linked Answer Questions 76 and 77:\nDelayed branching can help in the handling of control hazards.\n\nThe following code is to run on a pipelined processor with one branch delay slot:\nI1: ADD R2 ← R7 + R8\nI2: SUB R4 ← R5 - R6\nI3: ADD R1 ← R2 + R3\nI4: STORE Memory[R4] ← R1\n    BRANCH to Label if R1 = 0\nWhich of the instructions I1, I2, I3 or I4 can legitimately occupy the delay slot without any other program modification?",
      "options": [
        "(A) I1",
        "(B) I2",
        "(C) I3",
        "(D) I4"
      ],
      "subject": "Computer Organization and Architecture",
      "chapter": "Computer Organization and Architecture",
      "subtopic": "Instruction pipelining, pipeline hazards",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.78",
      "question_text": "Statement for Linked Answer Questions 78 and 79:\nLet xₙ denote the number of binary strings of length n that contain no consecutive 0s.\n\nWhich of the following recurrences does xₙ satisfy?",
      "options": [
        "(A) xₙ = 2xₙ₋₁",
        "(B) xₙ = xₙ/₂ + 1",
        "(C) xₙ = xₙ/₂ + n",
        "(D) xₙ = xₙ₋₁ + xₙ₋₂"
      ],
      "subject": "Engineering Mathematics",
      "chapter": "Discrete Mathematics",
      "subtopic": "Combinatorics: counting, recurrence relations, generating functions",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.79",
      "question_text": "Statement for Linked Answer Questions 78 and 79:\nLet xₙ denote the number of binary strings of length n that contain no consecutive 0s.\n\nThe value of x₅ is",
      "options": [
        "(A) 5",
        "(B) 7",
        "(C) 8",
        "(D) 16"
      ],
      "subject": "Engineering Mathematics",
      "chapter": "Discrete Mathematics",
      "subtopic": "Combinatorics: counting, recurrence relations, generating functions",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.80",
      "question_text": "Statement for Linked Answer Questions 80 and 81:\nThe subset-sum problem is defined as follows. Given a set of n positive integers, S = {a₁, a₂, a₃, ..., aₙ}, and a positive integer W, is there a subset of S whose elements sum to W? A dynamic program for solving this problem uses a 2-dimensional Boolean array, X, with n rows and W+1 columns. X[i, j], 1 ≤ i ≤ n, 0 ≤ j ≤ W, is TRUE if and only if there is a subset of {a₁, a₂, ..., aᵢ} whose elements sum to j.\n\nWhich of the following is valid for 2 ≤ i ≤ n and aᵢ ≤ j ≤ W?",
      "options": [
        "(A) X[i, j] = X[i-1, j] ∨ X[i, j-aᵢ]",
        "(B) X[i, j] = X[i-1, j] ∨ X[i-1, j-aᵢ]",
        "(C) X[i, j] = X[i-1, j] ∧ X[i, j-aᵢ]",
        "(D) X[i, j] = X[i-1, j] ∧ X[i-1, j-aᵢ]"
      ],
      "subject": "Algorithms",
      "chapter": "Algorithms",
      "subtopic": "Algorithm design techniques: greedy, dynamic programming and divide-and-conquer",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.81",
      "question_text": "Statement for Linked Answer Questions 80 and 81:\nThe subset-sum problem is defined as follows. Given a set of n positive integers, S = {a₁, a₂, a₃, ..., aₙ}, and a positive integer W, is there a subset of S whose elements sum to W? A dynamic program for solving this problem uses a 2-dimensional Boolean array, X, with n rows and W+1 columns. X[i, j], 1 ≤ i ≤ n, 0 ≤ j ≤ W, is TRUE if and only if there is a subset of {a₁, a₂, ..., aᵢ} whose elements sum to j.\n\nWhich entry of the array X, if TRUE, implies that there is a subset whose elements sum to W?",
      "options": [
        "(A) X[1, W]",
        "(B) X[n, 0]",
        "(C) X[n, W]",
        "(D) X[n-1, n]"
      ],
      "subject": "Algorithms",
      "chapter": "Algorithms",
      "subtopic": "Algorithm design techniques: greedy, dynamic programming and divide-and-conquer",
      "theoretical_practical": "theoretical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.82",
      "question_text": "Statement for Linked Answer Questions 82 and 83:\nConsider the following ER diagram\n(image of an ER diagram with entities M, P, N. M has attributes M1, M2, M3. P has attributes P1, P2. N has attributes N1, N2. M and P are related by R1, a many-to-one relationship. P and N are related by R2, a many-to-many relationship. M is a multi-valued attribute M1)\n\nThe minimum number of tables needed to represent M,N,P,R1,R2 is",
      "options": [
        "(A) 2",
        "(B) 3",
        "(C) 4",
        "(D) 5"
      ],
      "subject": "Databases",
      "chapter": "Databases",
      "subtopic": "ER-model",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.83",
      "question_text": "Statement for Linked Answer Questions 82 and 83:\nConsider the following ER diagram\n(image of an ER diagram with entities M, P, N. M has attributes M1, M2, M3. P has attributes P1, P2. N has attributes N1, N2. M and P are related by R1, a many-to-one relationship. P and N are related by R2, a many-to-many relationship. M is a multi-valued attribute M1)\n\nWhich of the following is a correct attribute set for one of the tables for the correct answer to the above question?",
      "options": [
        "(A) {M1, M2, M3, P1}",
        "(B) {M1, P1, N1, N2}",
        "(C) {M1, P1, N1}",
        "(D) {M1, P1}"
      ],
      "subject": "Databases",
      "chapter": "Databases",
      "subtopic": "ER-model",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.84",
      "question_text": "Statement for Linked Answer Questions 84 and 85:\nConsider the following C program that attempts to locate an element x in an array Y[] using binary search. The program is erroneous.\n1. f(int Y[10], int x) {\n2.   int i, j, k;\n3.   i = 0; j = 9;\n4.   do {\n5.     k = (i+j)/2;\n6.     if (Y[k] < x) i = k; else j = k;\n7.   } while ((Y[k] != x) && (i < j));\n8.   if (Y[k] == x) printf(\"x is in the array\");\n9.   else printf(\"x is not in the array\");\n10. }\n\nOn which of the following contents of Y and x does the program fail?",
      "options": [
        "(A) Y is [1 2 3 4 5 6 7 8 9 10] and x < 10",
        "(B) Y is [1 3 5 7 9 11 13 15 17 19] and x < 1",
        "(C) Y is [2 2 2 2 2 2 2 2 2 2] and x > 2",
        "(D) Y is [2 4 6 8 10 12 14 16 18 20] and 2 < x < 20 and x is even"
      ],
      "subject": "Algorithms",
      "chapter": "Algorithms",
      "subtopic": "Searching, sorting, hashing",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    },
    {
      "year": 2008,
      "paper_code": "CS",
      "question_no": "Q.85",
      "question_text": "Statement for Linked Answer Questions 84 and 85:\nConsider the following C program that attempts to locate an element x in an array Y[] using binary search. The program is erroneous.\n1. f(int Y[10], int x) {\n2.   int i, j, k;\n3.   i = 0; j = 9;\n4.   do {\n5.     k = (i+j)/2;\n6.     if (Y[k] < x) i = k; else j = k;\n7.   } while ((Y[k] != x) && (i < j));\n8.   if (Y[k] == x) printf(\"x is in the array\");\n9.   else printf(\"x is not in the array\");\n10. }\n\nThe correction needed in the program to make it work properly is",
      "options": [
        "(A) change line 6 to: if (Y[k] < x) i = k+1; else j = k-1;",
        "(B) change line 6 to: if (Y[k] > x) i = k-1; else j = k+1;",
        "(C) change line 6 to: if (Y[k] < x) i = k; else j = k;",
        "(D) change line 7 to: } while ((Y[k] == x) && (i < j));"
      ],
      "subject": "Algorithms",
      "chapter": "Algorithms",
      "subtopic": "Searching, sorting, hashing",
      "theoretical_practical": "practical",
      "marks": 2,
      "provenance": "GATE_2008_CS_PDF",
      "confidence": 1.0
    }
  ]